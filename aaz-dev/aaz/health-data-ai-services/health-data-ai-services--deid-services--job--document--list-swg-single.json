{
  "name": "list",
  "version": "2024-11-15",
  "resources": [
    {
      "id": "/jobs/{}/documents",
      "version": "2024-11-15",
      "swagger": "data-plane:healthdataaiservices.deidservices/healthdataaiservices/ResourceProviders/HealthDataAIServices.DeidServices/Paths/L2pvYnMve25hbWV9L2RvY3VtZW50cw==/V/MjAyNC0xMS0xNQ=="
    }
  ],
  "argGroups": [
    {
      "name": "",
      "args": [
        {
          "type": "string",
          "var": "$Path.name",
          "options": [
            "name"
          ],
          "required": true,
          "help": {
            "short": "The name of a job."
          },
          "format": {
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_]+[a-zA-Z0-9]$",
            "maxLength": 36,
            "minLength": 3
          }
        },
        {
          "type": "string",
          "var": "$Query.continuationToken",
          "options": [
            "continuation-token"
          ],
          "help": {
            "short": "Token to continue a previous query."
          }
        },
        {
          "type": "integer32",
          "var": "$Query.maxpagesize",
          "options": [
            "maxpagesize"
          ],
          "help": {
            "short": "The maximum number of result items per page."
          }
        }
      ]
    }
  ],
  "operations": [
    {
      "operationId": "ListJobDocuments",
      "http": {
        "path": "/jobs/{name}/documents",
        "request": {
          "method": "get",
          "path": {
            "params": [
              {
                "type": "string",
                "name": "name",
                "arg": "$Path.name",
                "required": true,
                "format": {
                  "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_]+[a-zA-Z0-9]$",
                  "maxLength": 36,
                  "minLength": 3
                }
              }
            ]
          },
          "query": {
            "params": [
              {
                "type": "string",
                "name": "continuationToken",
                "arg": "$Query.continuationToken"
              },
              {
                "type": "integer32",
                "name": "maxpagesize",
                "arg": "$Query.maxpagesize"
              }
            ],
            "consts": [
              {
                "readOnly": true,
                "const": true,
                "default": {
                  "value": "2024-11-15"
                },
                "type": "string",
                "name": "api-version",
                "required": true,
                "format": {
                  "minLength": 1
                }
              }
            ]
          },
          "header": {
            "clientRequestId": "x-ms-client-request-id"
          }
        },
        "responses": [
          {
            "statusCode": [
              200
            ],
            "header": {
              "items": [
                {
                  "name": "x-ms-client-request-id"
                }
              ]
            },
            "body": {
              "json": {
                "var": "$Instance",
                "schema": {
                  "type": "object",
                  "props": [
                    {
                      "type": "string",
                      "name": "nextLink"
                    },
                    {
                      "type": "array<object>",
                      "name": "value",
                      "required": true,
                      "item": {
                        "type": "object",
                        "props": [
                          {
                            "type": "object",
                            "name": "error",
                            "props": [
                              {
                                "type": "string",
                                "name": "code",
                                "required": true
                              },
                              {
                                "type": "array<@AzureCoreFoundationsError_read>",
                                "name": "details",
                                "item": {
                                  "type": "@AzureCoreFoundationsError_read"
                                }
                              },
                              {
                                "type": "object",
                                "name": "innererror",
                                "props": [
                                  {
                                    "type": "string",
                                    "name": "code"
                                  },
                                  {
                                    "type": "@AzureCoreFoundationsInnerError_read",
                                    "name": "innererror"
                                  }
                                ],
                                "cls": "AzureCoreFoundationsInnerError_read"
                              },
                              {
                                "type": "string",
                                "name": "message",
                                "required": true
                              },
                              {
                                "type": "string",
                                "name": "target"
                              }
                            ],
                            "cls": "AzureCoreFoundationsError_read"
                          },
                          {
                            "readOnly": true,
                            "type": "string",
                            "name": "id"
                          },
                          {
                            "type": "object",
                            "name": "input",
                            "required": true,
                            "props": [
                              {
                                "readOnly": true,
                                "type": "string",
                                "name": "etag"
                              },
                              {
                                "type": "string",
                                "name": "location",
                                "required": true,
                                "format": {
                                  "maxLength": 1024
                                }
                              }
                            ],
                            "cls": "DeidentificationDocumentLocation_read"
                          },
                          {
                            "type": "@DeidentificationDocumentLocation_read",
                            "name": "output"
                          },
                          {
                            "type": "string",
                            "name": "status",
                            "required": true,
                            "enum": {
                              "items": [
                                {
                                  "value": "Canceled"
                                },
                                {
                                  "value": "Failed"
                                },
                                {
                                  "value": "NotStarted"
                                },
                                {
                                  "value": "Running"
                                },
                                {
                                  "value": "Succeeded"
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "isError": true,
            "header": {
              "items": [
                {
                  "name": "x-ms-error-code"
                }
              ]
            },
            "body": {
              "json": {
                "schema": {
                  "type": "@ODataV4Format"
                }
              }
            }
          }
        ]
      }
    }
  ],
  "outputs": [
    {
      "type": "array",
      "ref": "$Instance.value",
      "clientFlatten": true,
      "nextLink": "$Instance.nextLink"
    }
  ]
}