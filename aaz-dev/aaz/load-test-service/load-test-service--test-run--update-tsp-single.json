{
  "name": "update",
  "version": "2024-12-01-preview",
  "resources": [
    {
      "id": "/test-runs/{}",
      "version": "2024-12-01-preview",
      "swagger": "data-plane:microsoft.loadtestservice/loadtestservice/ResourceProviders/Microsoft.LoadTestService/Paths/L3Rlc3QtcnVucy97dGVzdFJ1bklkfQ==/V/MjAyNC0xMi0wMS1wcmV2aWV3"
    }
  ],
  "argGroups": [
    {
      "name": "",
      "args": [
        {
          "type": "string",
          "var": "$Path.testRunId",
          "options": [
            "test-run-id"
          ],
          "required": true,
          "help": {
            "short": "Unique test run identifier for the load test run, must contain only lower-case alphabetic, numeric, underscore or hyphen characters."
          },
          "format": {
            "pattern": "^[a-z0-9_-]*$",
            "maxLength": 50,
            "minLength": 2
          }
        },
        {
          "type": "string",
          "var": "$Query.oldTestRunId",
          "options": [
            "old-test-run-id"
          ],
          "help": {
            "short": "Existing test run identifier that should be rerun, if this is provided, the test will run with the JMX file, configuration and app components from the existing test run. You can override the configuration values for new test run in the request body."
          }
        }
      ]
    },
    {
      "name": "Body",
      "args": [
        {
          "type": "object",
          "var": "$body.autoStopCriteria",
          "options": [
            "auto-stop-criteria"
          ],
          "group": "Body",
          "help": {
            "short": "Auto stop criteria for a test. This will automatically stop a load test if the error percentage is high for a certain time window."
          },
          "args": [
            {
              "type": "boolean",
              "var": "$body.autoStopCriteria.autoStopDisabled",
              "options": [
                "auto-stop-disabled"
              ],
              "help": {
                "short": "Whether auto-stop should be disabled. The default value is false."
              },
              "default": {
                "value": false
              }
            },
            {
              "type": "float32",
              "var": "$body.autoStopCriteria.errorRate",
              "options": [
                "error-rate"
              ],
              "help": {
                "short": "Threshold percentage of errors on which test run should be automatically stopped. Allowed values are in range of 0.0-100.0"
              },
              "default": {
                "value": 90.0
              }
            },
            {
              "type": "integer32",
              "var": "$body.autoStopCriteria.errorRateTimeWindowInSeconds",
              "options": [
                "error-rate-time-window-in-seconds"
              ],
              "help": {
                "short": "Time window during which the error percentage should be evaluated in seconds."
              },
              "default": {
                "value": 60
              }
            }
          ]
        },
        {
          "type": "object",
          "var": "$body.certificate",
          "options": [
            "certificate"
          ],
          "group": "Body",
          "help": {
            "short": "Certificates metadata"
          },
          "args": [
            {
              "type": "string",
              "var": "$body.certificate.name",
              "options": [
                "name"
              ],
              "help": {
                "short": "Name of the certificate."
              }
            },
            {
              "type": "string",
              "var": "$body.certificate.type",
              "options": [
                "type"
              ],
              "help": {
                "short": "Type of certificate"
              },
              "enum": {
                "items": [
                  {
                    "name": "AKV_CERT_URI",
                    "value": "AKV_CERT_URI"
                  }
                ]
              }
            },
            {
              "type": "string",
              "var": "$body.certificate.value",
              "options": [
                "value"
              ],
              "help": {
                "short": "The value of the certificate for respective type"
              }
            }
          ]
        },
        {
          "type": "string",
          "var": "$body.createdByType",
          "options": [
            "created-by-type"
          ],
          "group": "Body",
          "help": {
            "short": "The type of the entity that created the test run. (E.x. User, ScheduleTrigger, etc)."
          },
          "enum": {
            "items": [
              {
                "name": "ScheduledTrigger",
                "value": "ScheduledTrigger"
              },
              {
                "name": "User",
                "value": "User"
              }
            ]
          }
        },
        {
          "type": "boolean",
          "var": "$body.debugLogsEnabled",
          "options": [
            "debug-logs-enabled"
          ],
          "group": "Body",
          "help": {
            "short": "Enable or disable debug level logging. True if debug logs are enabled for the test run. False otherwise"
          }
        },
        {
          "type": "string",
          "var": "$body.description",
          "options": [
            "description"
          ],
          "group": "Body",
          "help": {
            "short": "The test run description."
          },
          "format": {
            "maxLength": 100
          }
        },
        {
          "type": "string",
          "var": "$body.displayName",
          "options": [
            "display-name"
          ],
          "group": "Body",
          "help": {
            "short": "Display name of a testRun."
          },
          "format": {
            "maxLength": 50,
            "minLength": 2
          }
        },
        {
          "type": "object",
          "var": "$body.environmentVariables",
          "options": [
            "environment-variables"
          ],
          "group": "Body",
          "help": {
            "short": "Environment variables which are defined as a set of <name,value> pairs."
          },
          "additionalProps": {
            "item": {
              "type": "string"
            }
          }
        },
        {
          "type": "object",
          "var": "$body.passFailCriteria",
          "options": [
            "pass-fail-criteria"
          ],
          "group": "Body",
          "help": {
            "short": "Pass fail criteria for a test."
          },
          "args": [
            {
              "type": "object",
              "var": "$body.passFailCriteria.passFailMetrics",
              "options": [
                "pass-fail-metrics"
              ],
              "help": {
                "short": "Map of id and pass fail metrics { id  : pass fail metrics }."
              },
              "additionalProps": {
                "item": {
                  "type": "object",
                  "args": [
                    {
                      "type": "string",
                      "var": "$body.passFailCriteria.passFailMetrics{}.action",
                      "options": [
                        "action"
                      ],
                      "help": {
                        "short": "Action taken after the threshold is met. Default is ‘continue’."
                      },
                      "default": {
                        "value": "continue"
                      },
                      "enum": {
                        "items": [
                          {
                            "name": "continue",
                            "value": "continue"
                          },
                          {
                            "name": "stop",
                            "value": "stop"
                          }
                        ]
                      }
                    },
                    {
                      "type": "string",
                      "var": "$body.passFailCriteria.passFailMetrics{}.aggregate",
                      "options": [
                        "aggregate"
                      ],
                      "help": {
                        "short": "The aggregation function to be applied on the client metric. Allowed functions - ‘percentage’ - for error metric , ‘avg’, percentiles like ‘p50’, ‘p90’, & so on, ‘min’, ‘max’ - for response_time_ms and latency metric, ‘avg’ - for requests_per_sec, ‘count’ - for requests"
                      },
                      "enum": {
                        "items": [
                          {
                            "name": "avg",
                            "value": "avg"
                          },
                          {
                            "name": "count",
                            "value": "count"
                          },
                          {
                            "name": "max",
                            "value": "max"
                          },
                          {
                            "name": "min",
                            "value": "min"
                          },
                          {
                            "name": "p50",
                            "value": "p50"
                          },
                          {
                            "name": "p75",
                            "value": "p75"
                          },
                          {
                            "name": "p90",
                            "value": "p90"
                          },
                          {
                            "name": "p95",
                            "value": "p95"
                          },
                          {
                            "name": "p96",
                            "value": "p96"
                          },
                          {
                            "name": "p97",
                            "value": "p97"
                          },
                          {
                            "name": "p98",
                            "value": "p98"
                          },
                          {
                            "name": "p99",
                            "value": "p99"
                          },
                          {
                            "name": "p99.9",
                            "value": "p99.9"
                          },
                          {
                            "name": "p99.99",
                            "value": "p99.99"
                          },
                          {
                            "name": "percentage",
                            "value": "percentage"
                          }
                        ]
                      }
                    },
                    {
                      "type": "string",
                      "var": "$body.passFailCriteria.passFailMetrics{}.clientMetric",
                      "options": [
                        "client-metric"
                      ],
                      "help": {
                        "short": "The client metric on which the criteria should be applied."
                      },
                      "enum": {
                        "items": [
                          {
                            "name": "error",
                            "value": "error"
                          },
                          {
                            "name": "latency",
                            "value": "latency"
                          },
                          {
                            "name": "requests",
                            "value": "requests"
                          },
                          {
                            "name": "requests_per_sec",
                            "value": "requests_per_sec"
                          },
                          {
                            "name": "response_time_ms",
                            "value": "response_time_ms"
                          }
                        ]
                      }
                    },
                    {
                      "type": "string",
                      "var": "$body.passFailCriteria.passFailMetrics{}.condition",
                      "options": [
                        "condition"
                      ],
                      "help": {
                        "short": "The comparison operator. Supported types ‘>’, ‘<’ "
                      }
                    },
                    {
                      "type": "string",
                      "var": "$body.passFailCriteria.passFailMetrics{}.requestName",
                      "options": [
                        "request-name"
                      ],
                      "help": {
                        "short": "Request name for which the Pass fail criteria has to be applied "
                      }
                    },
                    {
                      "type": "float64",
                      "var": "$body.passFailCriteria.passFailMetrics{}.value",
                      "options": [
                        "value"
                      ],
                      "help": {
                        "short": "The value to compare with the client metric. Allowed values - ‘error : [0.0 , 100.0] unit- % ’, response_time_ms and latency : any integer value unit- ms."
                      }
                    }
                  ]
                }
              }
            },
            {
              "type": "object",
              "var": "$body.passFailCriteria.passFailServerMetrics",
              "options": [
                "pass-fail-server-metrics"
              ],
              "help": {
                "short": "Map of id and pass fail server metrics { id  : pass fail metrics }."
              },
              "additionalProps": {
                "item": {
                  "type": "object",
                  "args": [
                    {
                      "type": "string",
                      "var": "$body.passFailCriteria.passFailServerMetrics{}.action",
                      "options": [
                        "action"
                      ],
                      "help": {
                        "short": "Action taken after the threshold is met. Default is ‘continue’."
                      },
                      "default": {
                        "value": "continue"
                      },
                      "enum": {
                        "items": [
                          {
                            "name": "continue",
                            "value": "continue"
                          },
                          {
                            "name": "stop",
                            "value": "stop"
                          }
                        ]
                      }
                    },
                    {
                      "type": "string",
                      "var": "$body.passFailCriteria.passFailServerMetrics{}.aggregation",
                      "options": [
                        "aggregation"
                      ],
                      "help": {
                        "short": "Aggregation Type"
                      }
                    },
                    {
                      "type": "string",
                      "var": "$body.passFailCriteria.passFailServerMetrics{}.condition",
                      "options": [
                        "condition"
                      ],
                      "help": {
                        "short": "The comparison operator. Supported types ‘>’, ‘<’ "
                      }
                    },
                    {
                      "type": "string",
                      "var": "$body.passFailCriteria.passFailServerMetrics{}.metricName",
                      "options": [
                        "metric-name"
                      ],
                      "help": {
                        "short": "The server metric name."
                      }
                    },
                    {
                      "type": "string",
                      "var": "$body.passFailCriteria.passFailServerMetrics{}.metricNamespace",
                      "options": [
                        "metric-namespace"
                      ],
                      "help": {
                        "short": "The server metric namespace."
                      }
                    },
                    {
                      "type": "ResourceId",
                      "var": "$body.passFailCriteria.passFailServerMetrics{}.resourceId",
                      "options": [
                        "resource-id"
                      ],
                      "help": {
                        "short": "The resource id of the resource emitting the metric."
                      }
                    },
                    {
                      "type": "float64",
                      "var": "$body.passFailCriteria.passFailServerMetrics{}.value",
                      "options": [
                        "value"
                      ],
                      "help": {
                        "short": "The value to compare with the server metric."
                      }
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "type": "string",
          "var": "$body.requestDataLevel",
          "options": [
            "request-data-level"
          ],
          "group": "Body",
          "help": {
            "short": "Request data collection level for test run"
          },
          "enum": {
            "items": [
              {
                "name": "ERRORS",
                "value": "ERRORS"
              },
              {
                "name": "NONE",
                "value": "NONE"
              }
            ]
          }
        },
        {
          "type": "object",
          "var": "$body.secrets",
          "options": [
            "secrets"
          ],
          "group": "Body",
          "help": {
            "short": "Secrets can be stored in an Azure Key Vault or any other secret store. If the secret is stored in an Azure Key Vault, the value should be the secret identifier and the type should be AKV_SECRET_URI. If the secret is stored elsewhere, the secret value should be provided directly and the type should be SECRET_VALUE."
          },
          "additionalProps": {
            "item": {
              "type": "object",
              "args": [
                {
                  "type": "string",
                  "var": "$body.secrets{}.type",
                  "options": [
                    "type"
                  ],
                  "help": {
                    "short": "Type of secret"
                  },
                  "enum": {
                    "items": [
                      {
                        "name": "AKV_SECRET_URI",
                        "value": "AKV_SECRET_URI"
                      },
                      {
                        "name": "SECRET_VALUE",
                        "value": "SECRET_VALUE"
                      }
                    ]
                  }
                },
                {
                  "type": "string",
                  "var": "$body.secrets{}.value",
                  "options": [
                    "value"
                  ],
                  "help": {
                    "short": "The value of the secret for the respective type"
                  }
                }
              ]
            }
          }
        },
        {
          "type": "string",
          "var": "$body.testId",
          "options": [
            "test-id"
          ],
          "group": "Body",
          "help": {
            "short": "Associated test Id."
          },
          "format": {
            "maxLength": 50,
            "minLength": 2
          }
        }
      ]
    }
  ],
  "operations": [
    {
      "operationId": "LoadTestRun_CreateOrUpdateTestRun",
      "http": {
        "path": "/test-runs/{testRunId}",
        "request": {
          "method": "patch",
          "path": {
            "params": [
              {
                "type": "string",
                "name": "testRunId",
                "arg": "$Path.testRunId",
                "required": true,
                "format": {
                  "pattern": "^[a-z0-9_-]*$",
                  "maxLength": 50,
                  "minLength": 2
                }
              }
            ]
          },
          "query": {
            "params": [
              {
                "type": "string",
                "name": "oldTestRunId",
                "arg": "$Query.oldTestRunId"
              }
            ],
            "consts": [
              {
                "readOnly": true,
                "const": true,
                "default": {
                  "value": "2024-12-01-preview"
                },
                "type": "string",
                "name": "api-version",
                "required": true,
                "format": {
                  "minLength": 1
                }
              }
            ]
          },
          "body": {
            "json": {
              "schema": {
                "type": "object",
                "name": "body",
                "required": true,
                "props": [
                  {
                    "type": "object",
                    "name": "autoStopCriteria",
                    "arg": "$body.autoStopCriteria",
                    "props": [
                      {
                        "default": {
                          "value": false
                        },
                        "type": "boolean",
                        "name": "autoStopDisabled",
                        "arg": "$body.autoStopCriteria.autoStopDisabled"
                      },
                      {
                        "default": {
                          "value": 90
                        },
                        "type": "float32",
                        "name": "errorRate",
                        "arg": "$body.autoStopCriteria.errorRate"
                      },
                      {
                        "default": {
                          "value": 60
                        },
                        "type": "integer32",
                        "name": "errorRateTimeWindowInSeconds",
                        "arg": "$body.autoStopCriteria.errorRateTimeWindowInSeconds"
                      }
                    ]
                  },
                  {
                    "type": "object",
                    "name": "certificate",
                    "arg": "$body.certificate",
                    "props": [
                      {
                        "type": "string",
                        "name": "name",
                        "arg": "$body.certificate.name"
                      },
                      {
                        "type": "string",
                        "name": "type",
                        "arg": "$body.certificate.type",
                        "enum": {
                          "items": [
                            {
                              "value": "AKV_CERT_URI"
                            }
                          ]
                        }
                      },
                      {
                        "type": "string",
                        "name": "value",
                        "arg": "$body.certificate.value"
                      }
                    ]
                  },
                  {
                    "type": "string",
                    "name": "createdByType",
                    "arg": "$body.createdByType",
                    "enum": {
                      "items": [
                        {
                          "value": "ScheduledTrigger"
                        },
                        {
                          "value": "User"
                        }
                      ]
                    }
                  },
                  {
                    "type": "boolean",
                    "name": "debugLogsEnabled",
                    "arg": "$body.debugLogsEnabled"
                  },
                  {
                    "type": "string",
                    "name": "description",
                    "arg": "$body.description",
                    "format": {
                      "maxLength": 100
                    }
                  },
                  {
                    "type": "string",
                    "name": "displayName",
                    "arg": "$body.displayName",
                    "format": {
                      "maxLength": 50,
                      "minLength": 2
                    }
                  },
                  {
                    "type": "object",
                    "name": "environmentVariables",
                    "arg": "$body.environmentVariables",
                    "additionalProps": {
                      "item": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "name": "passFailCriteria",
                    "arg": "$body.passFailCriteria",
                    "props": [
                      {
                        "type": "object",
                        "name": "passFailMetrics",
                        "arg": "$body.passFailCriteria.passFailMetrics",
                        "additionalProps": {
                          "item": {
                            "type": "object",
                            "props": [
                              {
                                "default": {
                                  "value": "continue"
                                },
                                "type": "string",
                                "name": "action",
                                "arg": "$body.passFailCriteria.passFailMetrics{}.action",
                                "enum": {
                                  "items": [
                                    {
                                      "value": "continue"
                                    },
                                    {
                                      "value": "stop"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "string",
                                "name": "aggregate",
                                "arg": "$body.passFailCriteria.passFailMetrics{}.aggregate",
                                "enum": {
                                  "items": [
                                    {
                                      "value": "avg"
                                    },
                                    {
                                      "value": "count"
                                    },
                                    {
                                      "value": "max"
                                    },
                                    {
                                      "value": "min"
                                    },
                                    {
                                      "value": "p50"
                                    },
                                    {
                                      "value": "p75"
                                    },
                                    {
                                      "value": "p90"
                                    },
                                    {
                                      "value": "p95"
                                    },
                                    {
                                      "value": "p96"
                                    },
                                    {
                                      "value": "p97"
                                    },
                                    {
                                      "value": "p98"
                                    },
                                    {
                                      "value": "p99"
                                    },
                                    {
                                      "value": "p99.9"
                                    },
                                    {
                                      "value": "p99.99"
                                    },
                                    {
                                      "value": "percentage"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "string",
                                "name": "clientMetric",
                                "arg": "$body.passFailCriteria.passFailMetrics{}.clientMetric",
                                "enum": {
                                  "items": [
                                    {
                                      "value": "error"
                                    },
                                    {
                                      "value": "latency"
                                    },
                                    {
                                      "value": "requests"
                                    },
                                    {
                                      "value": "requests_per_sec"
                                    },
                                    {
                                      "value": "response_time_ms"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "string",
                                "name": "condition",
                                "arg": "$body.passFailCriteria.passFailMetrics{}.condition"
                              },
                              {
                                "type": "string",
                                "name": "requestName",
                                "arg": "$body.passFailCriteria.passFailMetrics{}.requestName"
                              },
                              {
                                "type": "float64",
                                "name": "value",
                                "arg": "$body.passFailCriteria.passFailMetrics{}.value"
                              }
                            ]
                          }
                        }
                      },
                      {
                        "type": "object",
                        "name": "passFailServerMetrics",
                        "arg": "$body.passFailCriteria.passFailServerMetrics",
                        "additionalProps": {
                          "item": {
                            "type": "object",
                            "props": [
                              {
                                "default": {
                                  "value": "continue"
                                },
                                "type": "string",
                                "name": "action",
                                "arg": "$body.passFailCriteria.passFailServerMetrics{}.action",
                                "enum": {
                                  "items": [
                                    {
                                      "value": "continue"
                                    },
                                    {
                                      "value": "stop"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "string",
                                "name": "aggregation",
                                "arg": "$body.passFailCriteria.passFailServerMetrics{}.aggregation"
                              },
                              {
                                "type": "string",
                                "name": "condition",
                                "arg": "$body.passFailCriteria.passFailServerMetrics{}.condition"
                              },
                              {
                                "type": "string",
                                "name": "metricName",
                                "arg": "$body.passFailCriteria.passFailServerMetrics{}.metricName"
                              },
                              {
                                "type": "string",
                                "name": "metricNamespace",
                                "arg": "$body.passFailCriteria.passFailServerMetrics{}.metricNamespace"
                              },
                              {
                                "type": "ResourceId",
                                "name": "resourceId",
                                "arg": "$body.passFailCriteria.passFailServerMetrics{}.resourceId"
                              },
                              {
                                "type": "float64",
                                "name": "value",
                                "arg": "$body.passFailCriteria.passFailServerMetrics{}.value"
                              }
                            ]
                          }
                        }
                      }
                    ]
                  },
                  {
                    "type": "string",
                    "name": "requestDataLevel",
                    "arg": "$body.requestDataLevel",
                    "enum": {
                      "items": [
                        {
                          "value": "ERRORS"
                        },
                        {
                          "value": "NONE"
                        }
                      ]
                    }
                  },
                  {
                    "type": "object",
                    "name": "secrets",
                    "arg": "$body.secrets",
                    "additionalProps": {
                      "item": {
                        "type": "object",
                        "props": [
                          {
                            "type": "string",
                            "name": "type",
                            "arg": "$body.secrets{}.type",
                            "enum": {
                              "items": [
                                {
                                  "value": "AKV_SECRET_URI"
                                },
                                {
                                  "value": "SECRET_VALUE"
                                }
                              ]
                            }
                          },
                          {
                            "type": "string",
                            "name": "value",
                            "arg": "$body.secrets{}.value"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "type": "string",
                    "name": "testId",
                    "arg": "$body.testId",
                    "format": {
                      "maxLength": 50,
                      "minLength": 2
                    }
                  }
                ],
                "clientFlatten": true
              }
            }
          }
        },
        "responses": [
          {
            "statusCode": [
              201,
              200
            ],
            "body": {
              "json": {
                "var": "$Instance",
                "schema": {
                  "type": "object",
                  "props": [
                    {
                      "type": "object",
                      "name": "autoStopCriteria",
                      "props": [
                        {
                          "default": {
                            "value": false
                          },
                          "type": "boolean",
                          "name": "autoStopDisabled"
                        },
                        {
                          "default": {
                            "value": 90
                          },
                          "type": "float32",
                          "name": "errorRate"
                        },
                        {
                          "default": {
                            "value": 60
                          },
                          "type": "integer32",
                          "name": "errorRateTimeWindowInSeconds"
                        }
                      ]
                    },
                    {
                      "type": "object",
                      "name": "certificate",
                      "props": [
                        {
                          "type": "string",
                          "name": "name"
                        },
                        {
                          "type": "string",
                          "name": "type",
                          "enum": {
                            "items": [
                              {
                                "value": "AKV_CERT_URI"
                              }
                            ]
                          }
                        },
                        {
                          "type": "string",
                          "name": "value"
                        }
                      ]
                    },
                    {
                      "readOnly": true,
                      "type": "string",
                      "name": "createdBy"
                    },
                    {
                      "type": "string",
                      "name": "createdByType",
                      "enum": {
                        "items": [
                          {
                            "value": "ScheduledTrigger"
                          },
                          {
                            "value": "User"
                          }
                        ]
                      }
                    },
                    {
                      "readOnly": true,
                      "type": "dateTime",
                      "name": "createdDateTime"
                    },
                    {
                      "type": "boolean",
                      "name": "debugLogsEnabled"
                    },
                    {
                      "type": "string",
                      "name": "description",
                      "format": {
                        "maxLength": 100
                      }
                    },
                    {
                      "type": "string",
                      "name": "displayName",
                      "format": {
                        "maxLength": 50,
                        "minLength": 2
                      }
                    },
                    {
                      "readOnly": true,
                      "type": "integer64",
                      "name": "duration"
                    },
                    {
                      "readOnly": true,
                      "type": "dateTime",
                      "name": "endDateTime"
                    },
                    {
                      "type": "object",
                      "name": "environmentVariables",
                      "additionalProps": {
                        "item": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "readOnly": true,
                      "type": "array<object>",
                      "name": "errorDetails",
                      "item": {
                        "type": "object",
                        "props": [
                          {
                            "readOnly": true,
                            "type": "string",
                            "name": "message"
                          }
                        ]
                      }
                    },
                    {
                      "readOnly": true,
                      "type": "dateTime",
                      "name": "executedDateTime"
                    },
                    {
                      "readOnly": true,
                      "type": "string",
                      "name": "kind",
                      "enum": {
                        "items": [
                          {
                            "value": "JMX"
                          },
                          {
                            "value": "Locust"
                          },
                          {
                            "value": "URL"
                          }
                        ]
                      }
                    },
                    {
                      "readOnly": true,
                      "type": "string",
                      "name": "lastModifiedBy"
                    },
                    {
                      "readOnly": true,
                      "type": "dateTime",
                      "name": "lastModifiedDateTime"
                    },
                    {
                      "readOnly": true,
                      "type": "object",
                      "name": "loadTestConfiguration",
                      "props": [
                        {
                          "type": "integer32",
                          "name": "engineInstances"
                        },
                        {
                          "type": "object",
                          "name": "optionalLoadTestConfig",
                          "props": [
                            {
                              "type": "integer32",
                              "name": "duration"
                            },
                            {
                              "type": "string",
                              "name": "endpointUrl"
                            },
                            {
                              "type": "integer32",
                              "name": "maxResponseTimeInMs"
                            },
                            {
                              "type": "integer32",
                              "name": "rampUpTime"
                            },
                            {
                              "type": "integer32",
                              "name": "requestsPerSecond"
                            },
                            {
                              "type": "integer32",
                              "name": "virtualUsers"
                            }
                          ]
                        },
                        {
                          "default": {
                            "value": false
                          },
                          "type": "boolean",
                          "name": "quickStartTest"
                        },
                        {
                          "type": "array<object>",
                          "name": "regionalLoadTestConfig",
                          "item": {
                            "type": "object",
                            "props": [
                              {
                                "type": "integer32",
                                "name": "engineInstances",
                                "required": true
                              },
                              {
                                "type": "string",
                                "name": "region",
                                "required": true
                              }
                            ]
                          }
                        },
                        {
                          "default": {
                            "value": false
                          },
                          "type": "boolean",
                          "name": "splitAllCSVs"
                        }
                      ]
                    },
                    {
                      "type": "object",
                      "name": "passFailCriteria",
                      "props": [
                        {
                          "type": "object",
                          "name": "passFailMetrics",
                          "additionalProps": {
                            "item": {
                              "type": "object",
                              "props": [
                                {
                                  "default": {
                                    "value": "continue"
                                  },
                                  "type": "string",
                                  "name": "action",
                                  "enum": {
                                    "items": [
                                      {
                                        "value": "continue"
                                      },
                                      {
                                        "value": "stop"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "readOnly": true,
                                  "type": "float64",
                                  "name": "actualValue"
                                },
                                {
                                  "type": "string",
                                  "name": "aggregate",
                                  "enum": {
                                    "items": [
                                      {
                                        "value": "avg"
                                      },
                                      {
                                        "value": "count"
                                      },
                                      {
                                        "value": "max"
                                      },
                                      {
                                        "value": "min"
                                      },
                                      {
                                        "value": "p50"
                                      },
                                      {
                                        "value": "p75"
                                      },
                                      {
                                        "value": "p90"
                                      },
                                      {
                                        "value": "p95"
                                      },
                                      {
                                        "value": "p96"
                                      },
                                      {
                                        "value": "p97"
                                      },
                                      {
                                        "value": "p98"
                                      },
                                      {
                                        "value": "p99"
                                      },
                                      {
                                        "value": "p99.9"
                                      },
                                      {
                                        "value": "p99.99"
                                      },
                                      {
                                        "value": "percentage"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "string",
                                  "name": "clientMetric",
                                  "enum": {
                                    "items": [
                                      {
                                        "value": "error"
                                      },
                                      {
                                        "value": "latency"
                                      },
                                      {
                                        "value": "requests"
                                      },
                                      {
                                        "value": "requests_per_sec"
                                      },
                                      {
                                        "value": "response_time_ms"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "string",
                                  "name": "condition"
                                },
                                {
                                  "type": "string",
                                  "name": "requestName"
                                },
                                {
                                  "readOnly": true,
                                  "type": "string",
                                  "name": "result",
                                  "enum": {
                                    "items": [
                                      {
                                        "value": "failed"
                                      },
                                      {
                                        "value": "passed"
                                      },
                                      {
                                        "value": "undetermined"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "float64",
                                  "name": "value"
                                }
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "name": "passFailServerMetrics",
                          "additionalProps": {
                            "item": {
                              "type": "object",
                              "props": [
                                {
                                  "default": {
                                    "value": "continue"
                                  },
                                  "type": "string",
                                  "name": "action",
                                  "enum": {
                                    "items": [
                                      {
                                        "value": "continue"
                                      },
                                      {
                                        "value": "stop"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "readOnly": true,
                                  "type": "float64",
                                  "name": "actualValue"
                                },
                                {
                                  "type": "string",
                                  "name": "aggregation",
                                  "required": true
                                },
                                {
                                  "type": "string",
                                  "name": "condition",
                                  "required": true
                                },
                                {
                                  "type": "string",
                                  "name": "metricName",
                                  "required": true
                                },
                                {
                                  "type": "string",
                                  "name": "metricNamespace",
                                  "required": true
                                },
                                {
                                  "type": "ResourceId",
                                  "name": "resourceId",
                                  "required": true
                                },
                                {
                                  "readOnly": true,
                                  "type": "string",
                                  "name": "result",
                                  "enum": {
                                    "items": [
                                      {
                                        "value": "failed"
                                      },
                                      {
                                        "value": "passed"
                                      },
                                      {
                                        "value": "undetermined"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "float64",
                                  "name": "value",
                                  "required": true
                                }
                              ]
                            }
                          }
                        }
                      ]
                    },
                    {
                      "readOnly": true,
                      "type": "string",
                      "name": "portalUrl"
                    },
                    {
                      "readOnly": true,
                      "type": "boolean",
                      "name": "publicIPDisabled"
                    },
                    {
                      "readOnly": true,
                      "type": "@Record<TestRunStatistics>_read",
                      "name": "regionalStatistics"
                    },
                    {
                      "type": "string",
                      "name": "requestDataLevel",
                      "enum": {
                        "items": [
                          {
                            "value": "ERRORS"
                          },
                          {
                            "value": "NONE"
                          }
                        ]
                      }
                    },
                    {
                      "type": "object",
                      "name": "secrets",
                      "additionalProps": {
                        "item": {
                          "type": "object",
                          "props": [
                            {
                              "type": "string",
                              "name": "type",
                              "enum": {
                                "items": [
                                  {
                                    "value": "AKV_SECRET_URI"
                                  },
                                  {
                                    "value": "SECRET_VALUE"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "string",
                              "name": "value"
                            }
                          ]
                        }
                      }
                    },
                    {
                      "readOnly": true,
                      "type": "dateTime",
                      "name": "startDateTime"
                    },
                    {
                      "readOnly": true,
                      "type": "string",
                      "name": "status",
                      "enum": {
                        "items": [
                          {
                            "value": "ACCEPTED"
                          },
                          {
                            "value": "CANCELLED"
                          },
                          {
                            "value": "CANCELLING"
                          },
                          {
                            "value": "CONFIGURED"
                          },
                          {
                            "value": "CONFIGURING"
                          },
                          {
                            "value": "DEPROVISIONED"
                          },
                          {
                            "value": "DEPROVISIONING"
                          },
                          {
                            "value": "DONE"
                          },
                          {
                            "value": "EXECUTED"
                          },
                          {
                            "value": "EXECUTING"
                          },
                          {
                            "value": "FAILED"
                          },
                          {
                            "value": "NOTSTARTED"
                          },
                          {
                            "value": "PROVISIONED"
                          },
                          {
                            "value": "PROVISIONING"
                          },
                          {
                            "value": "VALIDATION_FAILURE"
                          },
                          {
                            "value": "VALIDATION_SUCCESS"
                          }
                        ]
                      }
                    },
                    {
                      "readOnly": true,
                      "type": "string",
                      "name": "subnetId"
                    },
                    {
                      "readOnly": true,
                      "type": "object",
                      "name": "testArtifacts",
                      "props": [
                        {
                          "readOnly": true,
                          "type": "object",
                          "name": "inputArtifacts",
                          "props": [
                            {
                              "readOnly": true,
                              "type": "array<@TestRunFileInfo_read>",
                              "name": "additionalFileInfo",
                              "item": {
                                "type": "@TestRunFileInfo_read"
                              }
                            },
                            {
                              "type": "object",
                              "name": "configFileInfo",
                              "props": [
                                {
                                  "readOnly": true,
                                  "type": "dateTime",
                                  "name": "expireDateTime"
                                },
                                {
                                  "type": "string",
                                  "name": "fileName",
                                  "required": true
                                },
                                {
                                  "readOnly": true,
                                  "type": "string",
                                  "name": "fileType",
                                  "enum": {
                                    "items": [
                                      {
                                        "value": "ADDITIONAL_ARTIFACTS"
                                      },
                                      {
                                        "value": "JMX_FILE"
                                      },
                                      {
                                        "value": "TEST_SCRIPT"
                                      },
                                      {
                                        "value": "URL_TEST_CONFIG"
                                      },
                                      {
                                        "value": "USER_PROPERTIES"
                                      },
                                      {
                                        "value": "ZIPPED_ARTIFACTS"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "readOnly": true,
                                  "type": "string",
                                  "name": "url"
                                },
                                {
                                  "readOnly": true,
                                  "type": "string",
                                  "name": "validationFailureDetails"
                                },
                                {
                                  "readOnly": true,
                                  "type": "string",
                                  "name": "validationStatus",
                                  "enum": {
                                    "items": [
                                      {
                                        "value": "NOT_VALIDATED"
                                      },
                                      {
                                        "value": "VALIDATION_FAILURE"
                                      },
                                      {
                                        "value": "VALIDATION_INITIATED"
                                      },
                                      {
                                        "value": "VALIDATION_NOT_REQUIRED"
                                      },
                                      {
                                        "value": "VALIDATION_SUCCESS"
                                      }
                                    ]
                                  }
                                }
                              ],
                              "cls": "TestRunFileInfo_read"
                            },
                            {
                              "type": "@TestRunFileInfo_read",
                              "name": "inputArtifactsZipFileInfo"
                            },
                            {
                              "type": "@TestRunFileInfo_read",
                              "name": "testScriptFileInfo"
                            },
                            {
                              "type": "@TestRunFileInfo_read",
                              "name": "urlTestConfigFileInfo"
                            },
                            {
                              "type": "@TestRunFileInfo_read",
                              "name": "userPropFileInfo"
                            }
                          ]
                        },
                        {
                          "type": "object",
                          "name": "outputArtifacts",
                          "props": [
                            {
                              "type": "object",
                              "name": "artifactsContainerInfo",
                              "props": [
                                {
                                  "type": "dateTime",
                                  "name": "expireDateTime"
                                },
                                {
                                  "type": "string",
                                  "name": "url"
                                }
                              ]
                            },
                            {
                              "type": "@TestRunFileInfo_read",
                              "name": "logsFileInfo"
                            },
                            {
                              "type": "@TestRunFileInfo_read",
                              "name": "reportFileInfo"
                            },
                            {
                              "type": "@TestRunFileInfo_read",
                              "name": "resultFileInfo"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "string",
                      "name": "testId",
                      "format": {
                        "maxLength": 50,
                        "minLength": 2
                      }
                    },
                    {
                      "readOnly": true,
                      "type": "string",
                      "name": "testResult",
                      "enum": {
                        "items": [
                          {
                            "value": "FAILED"
                          },
                          {
                            "value": "NOT_APPLICABLE"
                          },
                          {
                            "value": "PASSED"
                          }
                        ]
                      }
                    },
                    {
                      "readOnly": true,
                      "type": "string",
                      "name": "testRunId",
                      "format": {
                        "pattern": "^[a-z0-9_-]*$",
                        "maxLength": 50,
                        "minLength": 2
                      }
                    },
                    {
                      "readOnly": true,
                      "type": "object",
                      "name": "testRunStatistics",
                      "additionalProps": {
                        "item": {
                          "type": "object",
                          "props": [
                            {
                              "readOnly": true,
                              "type": "float64",
                              "name": "errorCount"
                            },
                            {
                              "readOnly": true,
                              "type": "float64",
                              "name": "errorPct"
                            },
                            {
                              "readOnly": true,
                              "type": "float64",
                              "name": "maxResTime"
                            },
                            {
                              "readOnly": true,
                              "type": "float64",
                              "name": "meanResTime"
                            },
                            {
                              "readOnly": true,
                              "type": "float64",
                              "name": "medianResTime"
                            },
                            {
                              "readOnly": true,
                              "type": "float64",
                              "name": "minResTime"
                            },
                            {
                              "readOnly": true,
                              "type": "float64",
                              "name": "pct1ResTime"
                            },
                            {
                              "readOnly": true,
                              "type": "float64",
                              "name": "pct2ResTime"
                            },
                            {
                              "readOnly": true,
                              "type": "float64",
                              "name": "pct3ResTime"
                            },
                            {
                              "readOnly": true,
                              "type": "float64",
                              "name": "pct75ResTime"
                            },
                            {
                              "readOnly": true,
                              "type": "float64",
                              "name": "pct96ResTime"
                            },
                            {
                              "readOnly": true,
                              "type": "float64",
                              "name": "pct97ResTime"
                            },
                            {
                              "readOnly": true,
                              "type": "float64",
                              "name": "pct98ResTime"
                            },
                            {
                              "readOnly": true,
                              "type": "float64",
                              "name": "pct9999ResTime"
                            },
                            {
                              "readOnly": true,
                              "type": "float64",
                              "name": "pct999ResTime"
                            },
                            {
                              "readOnly": true,
                              "type": "float64",
                              "name": "receivedKBytesPerSec"
                            },
                            {
                              "readOnly": true,
                              "type": "float64",
                              "name": "sampleCount"
                            },
                            {
                              "readOnly": true,
                              "type": "float64",
                              "name": "sentKBytesPerSec"
                            },
                            {
                              "readOnly": true,
                              "type": "float64",
                              "name": "throughput"
                            },
                            {
                              "readOnly": true,
                              "type": "string",
                              "name": "transaction"
                            }
                          ]
                        }
                      },
                      "cls": "Record<TestRunStatistics>_read"
                    },
                    {
                      "readOnly": true,
                      "type": "float64",
                      "name": "virtualUserHours"
                    },
                    {
                      "readOnly": true,
                      "type": "integer32",
                      "name": "virtualUsers"
                    }
                  ]
                }
              }
            }
          },
          {
            "isError": true,
            "header": {
              "items": [
                {
                  "name": "x-ms-error-code"
                }
              ]
            },
            "body": {
              "json": {
                "schema": {
                  "readOnly": true,
                  "type": "@ODataV4Format"
                }
              }
            }
          }
        ]
      }
    }
  ],
  "outputs": [
    {
      "type": "object",
      "ref": "$Instance",
      "clientFlatten": true
    }
  ]
}