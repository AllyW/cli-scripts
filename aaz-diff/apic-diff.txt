1
['apic api definition', 'update', '1']
['command-group:apic api definition', 'command:update', 'operation ind: 1']
    ChangeType.CHANGE
    {"instanceUpdate": {"ref": "$Instance", "json": {"schema": {"type": "object", "name": "payload", "required": true, "props": [{"type": "object", "name": "properties", "props": [{"type": "string", "name": "description", "arg": "$payload.properties.description"}, {"type": "string", "name": "title", "arg": "$payload.properties.title", "required": true, "format": {"maxLength": 50, "minLength": 1}}], "clientFlatten": true}], "clientFlatten": true}}}}
    {"instanceUpdate": {"ref": "$Instance", "json": {"schema": {"type": "object", "name": "payload", "required": true, "props": [{"type": "object", "name": "properties", "props": [{"type": "string", "name": "description", "arg": "$payload.properties.description"}, {"type": "string", "name": "title", "arg": "$payload.properties.title", "required": true, "format": {"maxLength": 50, "minLength": 1}}]}], "clientFlatten": true}}}}
2
['apic api deployment', 'create', 'Properties', '$payload.properties.customProperties']
['command-group:apic api deployment', 'command:create', 'argGroup: Properties', 'arg: $payload.properties.customProperties']
    ChangeType.REMOVE
    {"blank": {"value": {}}, "type": "object", "var": "$payload.properties.customProperties", "options": ["custom-properties"], "group": "Properties", "help": {"short": "The custom metadata defined for API catalog entities."}}
3
['apic api deployment', 'create', '0', 'request', 'body', 'schema', 'props', 'properties', 'props', 'customProperties']
['command-group:apic api deployment', 'command:create', 'operation ind: 0', 'request', 'body', 'schema', 'props', 'properties', 'props', 'customProperties']
    ChangeType.REMOVE
    {"type": "object", "name": "customProperties", "arg": "$payload.properties.customProperties"}
4
['apic api deployment', 'create', '0', 'responses', '200.201', 'body', 'schema', 'props', 'properties', 'props', 'customProperties']
['command-group:apic api deployment', 'command:create', 'operation ind: 0', 'responses', '200.201', 'body', 'schema', 'props', 'properties', 'props', 'customProperties']
    ChangeType.REMOVE
    {"type": "object", "name": "customProperties"}
5
['apic api deployment', 'list', '0', 'responses', '200', 'body', 'schema', 'props', 'value', 'item', 'props', 'properties', 'props', 'customProperties']
['command-group:apic api deployment', 'command:list', 'operation ind: 0', 'responses', '200', 'body', 'schema', 'props', 'value', 'item', 'props', 'properties', 'props', 'customProperties']
    ChangeType.REMOVE
    {"type": "object", "name": "customProperties"}
6
['apic api deployment', 'show', '0', 'responses', '200', 'body', 'schema', 'props', 'properties', 'props', 'customProperties']
['command-group:apic api deployment', 'command:show', 'operation ind: 0', 'responses', '200', 'body', 'schema', 'props', 'properties', 'props', 'customProperties']
    ChangeType.REMOVE
    {"type": "object", "name": "customProperties"}
7
['apic api deployment', 'update', 'Properties', '$payload.properties.customProperties']
['command-group:apic api deployment', 'command:update', 'argGroup: Properties', 'arg: $payload.properties.customProperties']
    ChangeType.REMOVE
    {"nullable": true, "blank": {"value": {}}, "type": "object", "var": "$payload.properties.customProperties", "options": ["custom-properties"], "group": "Properties", "help": {"short": "The custom metadata defined for API catalog entities."}}
8
['apic api deployment', 'update', '0', 'responses', '200', 'body', 'schema', 'props', 'properties', 'props', 'customProperties']
['command-group:apic api deployment', 'command:update', 'operation ind: 0', 'responses', '200', 'body', 'schema', 'props', 'properties', 'props', 'customProperties']
    ChangeType.REMOVE
    {"type": "object", "name": "customProperties"}
9
['apic api deployment', 'update', '1']
['command-group:apic api deployment', 'command:update', 'operation ind: 1']
    ChangeType.CHANGE
    {"instanceUpdate": {"ref": "$Instance", "json": {"schema": {"type": "object", "name": "payload", "required": true, "props": [{"type": "object", "name": "properties", "props": [{"type": "object", "name": "customProperties", "arg": "$payload.properties.customProperties"}, {"type": "string", "name": "definitionId", "arg": "$payload.properties.definitionId"}, {"type": "string", "name": "description", "arg": "$payload.properties.description", "format": {"maxLength": 500}}, {"type": "string", "name": "environmentId", "arg": "$payload.properties.environmentId"}, {"type": "object", "name": "server", "arg": "$payload.properties.server", "props": [{"type": "array<string>", "name": "runtimeUri", "arg": "$payload.properties.server.runtimeUri", "item": {"type": "string", "format": {"maxLength": 200}}}]}, {"type": "string", "name": "state", "arg": "$payload.properties.state", "enum": {"items": [{"value": "active"}, {"value": "inactive"}]}}, {"type": "string", "name": "title", "arg": "$payload.properties.title", "format": {"maxLength": 50, "minLength": 1}}], "clientFlatten": true}], "clientFlatten": true}}}}
    {"instanceUpdate": {"ref": "$Instance", "json": {"schema": {"type": "object", "name": "payload", "required": true, "props": [{"type": "object", "name": "properties", "props": [{"type": "string", "name": "definitionId", "arg": "$payload.properties.definitionId"}, {"type": "string", "name": "description", "arg": "$payload.properties.description", "format": {"maxLength": 500}}, {"type": "string", "name": "environmentId", "arg": "$payload.properties.environmentId"}, {"type": "object", "name": "server", "arg": "$payload.properties.server", "props": [{"type": "array<string>", "name": "runtimeUri", "arg": "$payload.properties.server.runtimeUri", "item": {"type": "string", "format": {"maxLength": 200}}}]}, {"type": "string", "name": "state", "arg": "$payload.properties.state", "enum": {"items": [{"value": "active"}, {"value": "inactive"}]}}, {"type": "string", "name": "title", "arg": "$payload.properties.title", "format": {"maxLength": 50, "minLength": 1}}]}], "clientFlatten": true}}}}
10
['apic api deployment', 'update', '2', 'responses', '200.201', 'body', 'schema', 'props', 'properties', 'props', 'customProperties']
['command-group:apic api deployment', 'command:update', 'operation ind: 2', 'responses', '200.201', 'body', 'schema', 'props', 'properties', 'props', 'customProperties']
    ChangeType.REMOVE
    {"type": "object", "name": "customProperties"}
11
['apic api version', 'update', '1']
['command-group:apic api version', 'command:update', 'operation ind: 1']
    ChangeType.CHANGE
    {"instanceUpdate": {"ref": "$Instance", "json": {"schema": {"type": "object", "name": "payload", "required": true, "props": [{"type": "object", "name": "properties", "props": [{"type": "string", "name": "lifecycleStage", "arg": "$payload.properties.lifecycleStage", "required": true, "enum": {"items": [{"value": "deprecated"}, {"value": "design"}, {"value": "development"}, {"value": "preview"}, {"value": "production"}, {"value": "retired"}, {"value": "testing"}]}}, {"type": "string", "name": "title", "arg": "$payload.properties.title", "required": true, "format": {"maxLength": 50, "minLength": 1}}], "clientFlatten": true}], "clientFlatten": true}}}}
    {"instanceUpdate": {"ref": "$Instance", "json": {"schema": {"type": "object", "name": "payload", "required": true, "props": [{"type": "object", "name": "properties", "props": [{"type": "string", "name": "lifecycleStage", "arg": "$payload.properties.lifecycleStage", "required": true, "enum": {"items": [{"value": "deprecated"}, {"value": "design"}, {"value": "development"}, {"value": "preview"}, {"value": "production"}, {"value": "retired"}, {"value": "testing"}]}}, {"type": "string", "name": "title", "arg": "$payload.properties.title", "required": true, "format": {"maxLength": 50, "minLength": 1}}]}], "clientFlatten": true}}}}
12
['apic api', 'create', 'Properties', '$payload.properties.customProperties']
['command-group:apic api', 'command:create', 'argGroup: Properties', 'arg: $payload.properties.customProperties']
    ChangeType.REMOVE
    {"blank": {"value": {}}, "type": "object", "var": "$payload.properties.customProperties", "options": ["custom-properties"], "group": "Properties", "help": {"short": "The custom metadata defined for API catalog entities."}}
13
['apic api', 'create', '0', 'request', 'body', 'schema', 'props', 'properties', 'props', 'customProperties']
['command-group:apic api', 'command:create', 'operation ind: 0', 'request', 'body', 'schema', 'props', 'properties', 'props', 'customProperties']
    ChangeType.REMOVE
    {"type": "object", "name": "customProperties", "arg": "$payload.properties.customProperties"}
14
['apic api', 'create', '0', 'responses', '200.201', 'body', 'schema', 'props', 'properties', 'props', 'customProperties']
['command-group:apic api', 'command:create', 'operation ind: 0', 'responses', '200.201', 'body', 'schema', 'props', 'properties', 'props', 'customProperties']
    ChangeType.REMOVE
    {"type": "object", "name": "customProperties"}
15
['apic api', 'list', '0', 'responses', '200', 'body', 'schema', 'props', 'value', 'item', 'props', 'properties', 'props', 'customProperties']
['command-group:apic api', 'command:list', 'operation ind: 0', 'responses', '200', 'body', 'schema', 'props', 'value', 'item', 'props', 'properties', 'props', 'customProperties']
    ChangeType.REMOVE
    {"type": "object", "name": "customProperties"}
16
['apic api', 'show', '0', 'responses', '200', 'body', 'schema', 'props', 'properties', 'props', 'customProperties']
['command-group:apic api', 'command:show', 'operation ind: 0', 'responses', '200', 'body', 'schema', 'props', 'properties', 'props', 'customProperties']
    ChangeType.REMOVE
    {"type": "object", "name": "customProperties"}
17
['apic api', 'update', 'Properties', '$payload.properties.customProperties']
['command-group:apic api', 'command:update', 'argGroup: Properties', 'arg: $payload.properties.customProperties']
    ChangeType.REMOVE
    {"nullable": true, "blank": {"value": {}}, "type": "object", "var": "$payload.properties.customProperties", "options": ["custom-properties"], "group": "Properties", "help": {"short": "The custom metadata defined for API catalog entities."}}
18
['apic api', 'update', '0', 'responses', '200', 'body', 'schema', 'props', 'properties', 'props', 'customProperties']
['command-group:apic api', 'command:update', 'operation ind: 0', 'responses', '200', 'body', 'schema', 'props', 'properties', 'props', 'customProperties']
    ChangeType.REMOVE
    {"type": "object", "name": "customProperties"}
19
['apic api', 'update', '1']
['command-group:apic api', 'command:update', 'operation ind: 1']
    ChangeType.CHANGE
    {"instanceUpdate": {"ref": "$Instance", "json": {"schema": {"type": "object", "name": "payload", "required": true, "props": [{"type": "object", "name": "properties", "props": [{"type": "array<object>", "name": "contacts", "arg": "$payload.properties.contacts", "item": {"type": "object", "props": [{"type": "string", "name": "email", "arg": "$payload.properties.contacts[].email", "format": {"maxLength": 100}}, {"type": "string", "name": "name", "arg": "$payload.properties.contacts[].name", "format": {"maxLength": 100}}, {"type": "string", "name": "url", "arg": "$payload.properties.contacts[].url", "format": {"maxLength": 200}}]}}, {"type": "object", "name": "customProperties", "arg": "$payload.properties.customProperties"}, {"type": "string", "name": "description", "arg": "$payload.properties.description", "format": {"maxLength": 1000}}, {"type": "array<object>", "name": "externalDocumentation", "arg": "$payload.properties.externalDocumentation", "format": {"maxLength": 20}, "item": {"type": "object", "props": [{"type": "string", "name": "description", "arg": "$payload.properties.externalDocumentation[].description", "format": {"maxLength": 500}}, {"type": "string", "name": "title", "arg": "$payload.properties.externalDocumentation[].title", "format": {"maxLength": 50}}, {"type": "string", "name": "url", "arg": "$payload.properties.externalDocumentation[].url", "required": true, "format": {"maxLength": 200}}]}}, {"type": "string", "name": "kind", "arg": "$payload.properties.kind", "required": true, "enum": {"items": [{"value": "graphql"}, {"value": "grpc"}, {"value": "rest"}, {"value": "soap"}, {"value": "webhook"}, {"value": "websocket"}]}}, {"type": "object", "name": "license", "arg": "$payload.properties.license", "props": [{"type": "string", "name": "identifier", "arg": "$payload.properties.license.identifier", "format": {"maxLength": 50}}, {"type": "string", "name": "name", "arg": "$payload.properties.license.name", "format": {"maxLength": 100}}, {"type": "string", "name": "url", "arg": "$payload.properties.license.url", "format": {"maxLength": 200}}]}, {"type": "string", "name": "summary", "arg": "$payload.properties.summary", "format": {"maxLength": 200}}, {"type": "object", "name": "termsOfService", "arg": "$payload.properties.termsOfService", "props": [{"type": "string", "name": "url", "arg": "$payload.properties.termsOfService.url", "required": true, "format": {"maxLength": 200}}]}, {"type": "string", "name": "title", "arg": "$payload.properties.title", "required": true, "format": {"maxLength": 50, "minLength": 1}}], "clientFlatten": true}], "clientFlatten": true}}}}
    {"instanceUpdate": {"ref": "$Instance", "json": {"schema": {"type": "object", "name": "payload", "required": true, "props": [{"type": "object", "name": "properties", "props": [{"type": "array<object>", "name": "contacts", "arg": "$payload.properties.contacts", "item": {"type": "object", "props": [{"type": "string", "name": "email", "arg": "$payload.properties.contacts[].email", "format": {"maxLength": 100}}, {"type": "string", "name": "name", "arg": "$payload.properties.contacts[].name", "format": {"maxLength": 100}}, {"type": "string", "name": "url", "arg": "$payload.properties.contacts[].url", "format": {"maxLength": 200}}]}}, {"type": "string", "name": "description", "arg": "$payload.properties.description", "format": {"maxLength": 1000}}, {"type": "array<object>", "name": "externalDocumentation", "arg": "$payload.properties.externalDocumentation", "format": {"maxLength": 20}, "item": {"type": "object", "props": [{"type": "string", "name": "description", "arg": "$payload.properties.externalDocumentation[].description", "format": {"maxLength": 500}}, {"type": "string", "name": "title", "arg": "$payload.properties.externalDocumentation[].title", "format": {"maxLength": 50}}, {"type": "string", "name": "url", "arg": "$payload.properties.externalDocumentation[].url", "required": true, "format": {"maxLength": 200}}]}}, {"type": "string", "name": "kind", "arg": "$payload.properties.kind", "required": true, "enum": {"items": [{"value": "graphql"}, {"value": "grpc"}, {"value": "rest"}, {"value": "soap"}, {"value": "webhook"}, {"value": "websocket"}]}}, {"type": "object", "name": "license", "arg": "$payload.properties.license", "props": [{"type": "string", "name": "identifier", "arg": "$payload.properties.license.identifier", "format": {"maxLength": 50}}, {"type": "string", "name": "name", "arg": "$payload.properties.license.name", "format": {"maxLength": 100}}, {"type": "string", "name": "url", "arg": "$payload.properties.license.url", "format": {"maxLength": 200}}]}, {"type": "string", "name": "summary", "arg": "$payload.properties.summary", "format": {"maxLength": 200}}, {"type": "object", "name": "termsOfService", "arg": "$payload.properties.termsOfService", "props": [{"type": "string", "name": "url", "arg": "$payload.properties.termsOfService.url", "required": true, "format": {"maxLength": 200}}]}, {"type": "string", "name": "title", "arg": "$payload.properties.title", "required": true, "format": {"maxLength": 50, "minLength": 1}}]}], "clientFlatten": true}}}}
20
['apic api', 'update', '2', 'responses', '200.201', 'body', 'schema', 'props', 'properties', 'props', 'customProperties']
['command-group:apic api', 'command:update', 'operation ind: 2', 'responses', '200.201', 'body', 'schema', 'props', 'properties', 'props', 'customProperties']
    ChangeType.REMOVE
    {"type": "object", "name": "customProperties"}
21
['apic environment', 'create', 'Properties', '$payload.properties.customProperties']
['command-group:apic environment', 'command:create', 'argGroup: Properties', 'arg: $payload.properties.customProperties']
    ChangeType.REMOVE
    {"blank": {"value": {}}, "type": "object", "var": "$payload.properties.customProperties", "options": ["custom-properties"], "group": "Properties", "help": {"short": "The custom metadata defined for API catalog entities."}}
22
['apic environment', 'create', '0', 'request', 'body', 'schema', 'props', 'properties', 'props', 'customProperties']
['command-group:apic environment', 'command:create', 'operation ind: 0', 'request', 'body', 'schema', 'props', 'properties', 'props', 'customProperties']
    ChangeType.REMOVE
    {"type": "object", "name": "customProperties", "arg": "$payload.properties.customProperties"}
23
['apic environment', 'create', '0', 'responses', '200.201', 'body', 'schema', 'props', 'properties', 'props', 'customProperties']
['command-group:apic environment', 'command:create', 'operation ind: 0', 'responses', '200.201', 'body', 'schema', 'props', 'properties', 'props', 'customProperties']
    ChangeType.REMOVE
    {"type": "object", "name": "customProperties"}
24
['apic environment', 'list', '0', 'responses', '200', 'body', 'schema', 'props', 'value', 'item', 'props', 'properties', 'props', 'customProperties']
['command-group:apic environment', 'command:list', 'operation ind: 0', 'responses', '200', 'body', 'schema', 'props', 'value', 'item', 'props', 'properties', 'props', 'customProperties']
    ChangeType.REMOVE
    {"type": "object", "name": "customProperties"}
25
['apic environment', 'show', '0', 'responses', '200', 'body', 'schema', 'props', 'properties', 'props', 'customProperties']
['command-group:apic environment', 'command:show', 'operation ind: 0', 'responses', '200', 'body', 'schema', 'props', 'properties', 'props', 'customProperties']
    ChangeType.REMOVE
    {"type": "object", "name": "customProperties"}
26
['apic environment', 'update', 'Properties', '$payload.properties.customProperties']
['command-group:apic environment', 'command:update', 'argGroup: Properties', 'arg: $payload.properties.customProperties']
    ChangeType.REMOVE
    {"nullable": true, "blank": {"value": {}}, "type": "object", "var": "$payload.properties.customProperties", "options": ["custom-properties"], "group": "Properties", "help": {"short": "The custom metadata defined for API catalog entities."}}
27
['apic environment', 'update', '0', 'responses', '200', 'body', 'schema', 'props', 'properties', 'props', 'customProperties']
['command-group:apic environment', 'command:update', 'operation ind: 0', 'responses', '200', 'body', 'schema', 'props', 'properties', 'props', 'customProperties']
    ChangeType.REMOVE
    {"type": "object", "name": "customProperties"}
28
['apic environment', 'update', '1']
['command-group:apic environment', 'command:update', 'operation ind: 1']
    ChangeType.CHANGE
    {"instanceUpdate": {"ref": "$Instance", "json": {"schema": {"type": "object", "name": "payload", "required": true, "props": [{"type": "object", "name": "properties", "props": [{"type": "object", "name": "customProperties", "arg": "$payload.properties.customProperties"}, {"type": "string", "name": "description", "arg": "$payload.properties.description"}, {"type": "string", "name": "kind", "arg": "$payload.properties.kind", "required": true, "enum": {"items": [{"value": "development"}, {"value": "production"}, {"value": "staging"}, {"value": "testing"}]}}, {"type": "object", "name": "onboarding", "arg": "$payload.properties.onboarding", "props": [{"type": "array<string>", "name": "developerPortalUri", "arg": "$payload.properties.onboarding.developerPortalUri", "format": {"maxLength": 1}, "item": {"type": "string"}}, {"type": "string", "name": "instructions", "arg": "$payload.properties.onboarding.instructions"}]}, {"type": "object", "name": "server", "arg": "$payload.properties.server", "props": [{"type": "array<string>", "name": "managementPortalUri", "arg": "$payload.properties.server.managementPortalUri", "format": {"maxLength": 1}, "item": {"type": "string"}}, {"type": "string", "name": "type", "arg": "$payload.properties.server.type", "enum": {"items": [{"value": "AWS API Gateway"}, {"value": "Apigee API Management"}, {"value": "Azure API Management"}, {"value": "Azure compute service"}, {"value": "Kong API Gateway"}, {"value": "Kubernetes"}, {"value": "MuleSoft API Management"}]}}]}, {"type": "string", "name": "title", "arg": "$payload.properties.title", "required": true, "format": {"maxLength": 50, "minLength": 1}}], "clientFlatten": true}], "clientFlatten": true}}}}
    {"instanceUpdate": {"ref": "$Instance", "json": {"schema": {"type": "object", "name": "payload", "required": true, "props": [{"type": "object", "name": "properties", "props": [{"type": "string", "name": "description", "arg": "$payload.properties.description"}, {"type": "string", "name": "kind", "arg": "$payload.properties.kind", "required": true, "enum": {"items": [{"value": "development"}, {"value": "production"}, {"value": "staging"}, {"value": "testing"}]}}, {"type": "object", "name": "onboarding", "arg": "$payload.properties.onboarding", "props": [{"type": "array<string>", "name": "developerPortalUri", "arg": "$payload.properties.onboarding.developerPortalUri", "format": {"maxLength": 1}, "item": {"type": "string"}}, {"type": "string", "name": "instructions", "arg": "$payload.properties.onboarding.instructions"}]}, {"type": "object", "name": "server", "arg": "$payload.properties.server", "props": [{"type": "array<string>", "name": "managementPortalUri", "arg": "$payload.properties.server.managementPortalUri", "format": {"maxLength": 1}, "item": {"type": "string"}}, {"type": "string", "name": "type", "arg": "$payload.properties.server.type", "enum": {"items": [{"value": "AWS API Gateway"}, {"value": "Apigee API Management"}, {"value": "Azure API Management"}, {"value": "Azure compute service"}, {"value": "Kong API Gateway"}, {"value": "Kubernetes"}, {"value": "MuleSoft API Management"}]}}]}, {"type": "string", "name": "title", "arg": "$payload.properties.title", "required": true, "format": {"maxLength": 50, "minLength": 1}}]}], "clientFlatten": true}}}}
29
['apic environment', 'update', '2', 'responses', '200.201', 'body', 'schema', 'props', 'properties', 'props', 'customProperties']
['command-group:apic environment', 'command:update', 'operation ind: 2', 'responses', '200.201', 'body', 'schema', 'props', 'properties', 'props', 'customProperties']
    ChangeType.REMOVE
    {"type": "object", "name": "customProperties"}
30
['apic metadata-schema', 'update', '1']
['command-group:apic metadata-schema', 'command:update', 'operation ind: 1']
    ChangeType.CHANGE
    {"instanceUpdate": {"ref": "$Instance", "json": {"schema": {"type": "object", "name": "payload", "required": true, "props": [{"type": "object", "name": "properties", "props": [{"type": "array<object>", "name": "assignedTo", "arg": "$payload.properties.assignedTo", "item": {"type": "object", "props": [{"type": "boolean", "name": "deprecated", "arg": "$payload.properties.assignedTo[].deprecated"}, {"type": "string", "name": "entity", "arg": "$payload.properties.assignedTo[].entity", "enum": {"items": [{"value": "api"}, {"value": "deployment"}, {"value": "environment"}]}}, {"type": "boolean", "name": "required", "arg": "$payload.properties.assignedTo[].required"}]}}, {"type": "string", "name": "schema", "arg": "$payload.properties.schema", "required": true}], "clientFlatten": true}], "clientFlatten": true}}}}
    {"instanceUpdate": {"ref": "$Instance", "json": {"schema": {"type": "object", "name": "payload", "required": true, "props": [{"type": "object", "name": "properties", "props": [{"type": "array<object>", "name": "assignedTo", "arg": "$payload.properties.assignedTo", "item": {"type": "object", "props": [{"type": "boolean", "name": "deprecated", "arg": "$payload.properties.assignedTo[].deprecated"}, {"type": "string", "name": "entity", "arg": "$payload.properties.assignedTo[].entity", "enum": {"items": [{"value": "api"}, {"value": "deployment"}, {"value": "environment"}]}}, {"type": "boolean", "name": "required", "arg": "$payload.properties.assignedTo[].required"}]}}, {"type": "string", "name": "schema", "arg": "$payload.properties.schema", "required": true}]}], "clientFlatten": true}}}}
31
['apic service', 'identity', 'assign', '0', 'responses', '200', 'body', 'schema', 'props', 'identity', 'props', 'type', 'enum']
['command-group:apic service', 'command-group:identity', 'command:assign', 'operation ind: 0', 'responses', '200', 'body', 'schema', 'props', 'identity', 'props', 'type', 'enum']
    ChangeType.CHANGE
    {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "SystemAssigned,UserAssigned"}, {"value": "UserAssigned"}]}
    {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "UserAssigned"}]}
32
['apic service', 'identity', 'assign', '2', 'responses', '200.201', 'body', 'schema', 'props', 'identity', 'props', 'type', 'enum']
['command-group:apic service', 'command-group:identity', 'command:assign', 'operation ind: 2', 'responses', '200.201', 'body', 'schema', 'props', 'identity', 'props', 'type', 'enum']
    ChangeType.CHANGE
    {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "SystemAssigned,UserAssigned"}, {"value": "UserAssigned"}]}
    {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "UserAssigned"}]}
33
['apic service', 'identity', 'remove', '0', 'responses', '200', 'body', 'schema', 'props', 'identity', 'props', 'type', 'enum']
['command-group:apic service', 'command-group:identity', 'command:remove', 'operation ind: 0', 'responses', '200', 'body', 'schema', 'props', 'identity', 'props', 'type', 'enum']
    ChangeType.CHANGE
    {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "SystemAssigned,UserAssigned"}, {"value": "UserAssigned"}]}
    {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "UserAssigned"}]}
34
['apic service', 'identity', 'remove', '2', 'responses', '200.201', 'body', 'schema', 'props', 'identity', 'props', 'type', 'enum']
['command-group:apic service', 'command-group:identity', 'command:remove', 'operation ind: 2', 'responses', '200.201', 'body', 'schema', 'props', 'identity', 'props', 'type', 'enum']
    ChangeType.CHANGE
    {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "SystemAssigned,UserAssigned"}, {"value": "UserAssigned"}]}
    {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "UserAssigned"}]}
35
['apic service', 'identity', 'show', '0', 'responses', '200', 'body', 'schema', 'props', 'identity', 'props', 'type', 'enum']
['command-group:apic service', 'command-group:identity', 'command:show', 'operation ind: 0', 'responses', '200', 'body', 'schema', 'props', 'identity', 'props', 'type', 'enum']
    ChangeType.CHANGE
    {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "SystemAssigned,UserAssigned"}, {"value": "UserAssigned"}]}
    {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "UserAssigned"}]}
36
['apic service', 'create', 'Identity', '$resource.identity.type', 'enum']
['command-group:apic service', 'command:create', 'argGroup: Identity', 'arg: $resource.identity.type', 'prop: enum']
    ChangeType.CHANGE
    {"items": [{"name": "None", "value": "None"}, {"name": "SystemAssigned", "value": "SystemAssigned"}, {"name": "SystemAssigned,UserAssigned", "value": "SystemAssigned,UserAssigned"}, {"name": "UserAssigned", "value": "UserAssigned"}]}
    {"items": [{"name": "None", "value": "None"}, {"name": "SystemAssigned", "value": "SystemAssigned"}, {"name": "UserAssigned", "value": "UserAssigned"}]}
37
['apic service', 'create', '0', 'request', 'body', 'schema', 'props', 'identity', 'props', 'type', 'enum']
['command-group:apic service', 'command:create', 'operation ind: 0', 'request', 'body', 'schema', 'props', 'identity', 'props', 'type', 'enum']
    ChangeType.CHANGE
    {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "SystemAssigned,UserAssigned"}, {"value": "UserAssigned"}]}
    {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "UserAssigned"}]}
38
['apic service', 'create', '0', 'responses', '200.201', 'body', 'schema', 'props', 'identity', 'props', 'type', 'enum']
['command-group:apic service', 'command:create', 'operation ind: 0', 'responses', '200.201', 'body', 'schema', 'props', 'identity', 'props', 'type', 'enum']
    ChangeType.CHANGE
    {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "SystemAssigned,UserAssigned"}, {"value": "UserAssigned"}]}
    {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "UserAssigned"}]}
39
['apic service', 'list', '0', 'responses', '200', 'body', 'schema', 'props', 'value', 'item', 'props', 'identity', 'props', 'type', 'enum']
['command-group:apic service', 'command:list', 'operation ind: 0', 'responses', '200', 'body', 'schema', 'props', 'value', 'item', 'props', 'identity', 'props', 'type', 'enum']
    ChangeType.CHANGE
    {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "SystemAssigned,UserAssigned"}, {"value": "UserAssigned"}]}
    {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "UserAssigned"}]}
40
['apic service', 'list', '1', 'responses', '200', 'body', 'schema', 'props', 'value', 'item', 'props', 'identity', 'props', 'type', 'enum']
['command-group:apic service', 'command:list', 'operation ind: 1', 'responses', '200', 'body', 'schema', 'props', 'value', 'item', 'props', 'identity', 'props', 'type', 'enum']
    ChangeType.CHANGE
    {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "SystemAssigned,UserAssigned"}, {"value": "UserAssigned"}]}
    {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "UserAssigned"}]}
41
['apic service', 'show', '0', 'responses', '200', 'body', 'schema', 'props', 'identity', 'props', 'type', 'enum']
['command-group:apic service', 'command:show', 'operation ind: 0', 'responses', '200', 'body', 'schema', 'props', 'identity', 'props', 'type', 'enum']
    ChangeType.CHANGE
    {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "SystemAssigned,UserAssigned"}, {"value": "UserAssigned"}]}
    {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "UserAssigned"}]}
42
['apic service', 'update', 'Identity', '$resource.identity.type', 'enum']
['command-group:apic service', 'command:update', 'argGroup: Identity', 'arg: $resource.identity.type', 'prop: enum']
    ChangeType.CHANGE
    {"items": [{"name": "None", "value": "None"}, {"name": "SystemAssigned", "value": "SystemAssigned"}, {"name": "SystemAssigned,UserAssigned", "value": "SystemAssigned,UserAssigned"}, {"name": "UserAssigned", "value": "UserAssigned"}]}
    {"items": [{"name": "None", "value": "None"}, {"name": "SystemAssigned", "value": "SystemAssigned"}, {"name": "UserAssigned", "value": "UserAssigned"}]}
43
['apic service', 'update', '0', 'responses', '200', 'body', 'schema', 'props', 'identity', 'props', 'type', 'enum']
['command-group:apic service', 'command:update', 'operation ind: 0', 'responses', '200', 'body', 'schema', 'props', 'identity', 'props', 'type', 'enum']
    ChangeType.CHANGE
    {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "SystemAssigned,UserAssigned"}, {"value": "UserAssigned"}]}
    {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "UserAssigned"}]}
44
['apic service', 'update', '1']
['command-group:apic service', 'command:update', 'operation ind: 1']
    ChangeType.CHANGE
    {"instanceUpdate": {"ref": "$Instance", "json": {"schema": {"type": "object", "name": "resource", "required": true, "props": [{"type": "IdentityObject", "name": "identity", "props": [{"type": "string", "name": "type", "arg": "$resource.identity.type", "required": true, "enum": {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "SystemAssigned,UserAssigned"}, {"value": "UserAssigned"}]}}, {"type": "object", "name": "userAssignedIdentities", "arg": "$resource.identity.userAssignedIdentities", "additionalProps": {"item": {"nullable": true, "type": "object"}}}]}, {"type": "object", "name": "properties", "props": [{"default": {"value": false}, "type": "boolean", "name": "restore", "arg": "$resource.properties.restore"}], "clientFlatten": true}, {"type": "object", "name": "tags", "arg": "$resource.tags", "additionalProps": {"item": {"type": "string"}}}], "clientFlatten": true}}}}
    {"instanceUpdate": {"ref": "$Instance", "json": {"schema": {"type": "object", "name": "resource", "required": true, "props": [{"type": "IdentityObject", "name": "identity", "props": [{"type": "string", "name": "type", "arg": "$resource.identity.type", "required": true, "enum": {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "UserAssigned"}]}}, {"type": "object", "name": "userAssignedIdentities", "arg": "$resource.identity.userAssignedIdentities", "additionalProps": {"item": {"nullable": true, "type": "object"}}}]}, {"type": "object", "name": "properties", "props": [{"default": {"value": false}, "type": "boolean", "name": "restore", "arg": "$resource.properties.restore"}]}, {"type": "object", "name": "tags", "arg": "$resource.tags", "additionalProps": {"item": {"type": "string"}}}], "clientFlatten": true}}}}
45
['apic service', 'update', '2', 'responses', '200.201', 'body', 'schema', 'props', 'identity', 'props', 'type', 'enum']
['command-group:apic service', 'command:update', 'operation ind: 2', 'responses', '200.201', 'body', 'schema', 'props', 'identity', 'props', 'type', 'enum']
    ChangeType.CHANGE
    {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "SystemAssigned,UserAssigned"}, {"value": "UserAssigned"}]}
    {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "UserAssigned"}]}
46
['apic workspace', 'update', '1']
['command-group:apic workspace', 'command:update', 'operation ind: 1']
    ChangeType.CHANGE
    {"instanceUpdate": {"ref": "$Instance", "json": {"schema": {"type": "object", "name": "payload", "required": true, "props": [{"type": "object", "name": "properties", "props": [{"type": "string", "name": "description", "arg": "$payload.properties.description"}, {"type": "string", "name": "title", "arg": "$payload.properties.title", "required": true, "format": {"maxLength": 50, "minLength": 1}}], "clientFlatten": true}], "clientFlatten": true}}}}
    {"instanceUpdate": {"ref": "$Instance", "json": {"schema": {"type": "object", "name": "payload", "required": true, "props": [{"type": "object", "name": "properties", "props": [{"type": "string", "name": "description", "arg": "$payload.properties.description"}, {"type": "string", "name": "title", "arg": "$payload.properties.title", "required": true, "format": {"maxLength": 50, "minLength": 1}}]}], "clientFlatten": true}}}}
