{
  "name": "create",
  "version": "2024-03-01-preview",
  "resources": [
    {
      "id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.standbypool/standbycontainergrouppools/{}",
      "version": "2024-03-01-preview",
      "swagger": "mgmt-plane/standbypool/ResourceProviders/Microsoft.StandbyPool/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU3RhbmRieVBvb2wvc3RhbmRieUNvbnRhaW5lckdyb3VwUG9vbHMve3N0YW5kYnlDb250YWluZXJHcm91cFBvb2xOYW1lfQ==/V/MjAyNC0wMy0wMS1wcmV2aWV3"
    }
  ],
  "argGroups": [
    {
      "name": "",
      "args": [
        {
          "type": "ResourceGroupName",
          "var": "$Path.resourceGroupName",
          "options": [
            "g",
            "resource-group"
          ],
          "required": true,
          "idPart": "resource_group"
        },
        {
          "type": "string",
          "var": "$Path.standbyContainerGroupPoolName",
          "options": [
            "n",
            "name",
            "standby-container-group-pool-name"
          ],
          "required": true,
          "idPart": "name",
          "help": {
            "short": "Name of the standby container group pool"
          },
          "format": {
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        },
        {
          "type": "SubscriptionId",
          "var": "$Path.subscriptionId",
          "options": [
            "subscription"
          ],
          "required": true,
          "idPart": "subscription"
        }
      ]
    },
    {
      "name": "Properties",
      "args": [
        {
          "type": "object",
          "var": "$resource.properties.containerGroupProperties",
          "options": [
            "container-group-properties"
          ],
          "group": "Properties",
          "help": {
            "short": "Specifies container group properties of standby container group pools."
          },
          "args": [
            {
              "type": "object",
              "var": "$resource.properties.containerGroupProperties.containerGroupProfile",
              "options": [
                "container-group-profile"
              ],
              "required": true,
              "help": {
                "short": "Specifies container group profile of standby container groups."
              },
              "args": [
                {
                  "type": "ResourceId",
                  "var": "$resource.properties.containerGroupProperties.containerGroupProfile.id",
                  "options": [
                    "id"
                  ],
                  "required": true,
                  "help": {
                    "short": "Specifies container group profile id of standby container groups."
                  },
                  "format": {
                    "template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ContainerInstance/containerGroupProfiles/{}"
                  }
                },
                {
                  "type": "integer64",
                  "var": "$resource.properties.containerGroupProperties.containerGroupProfile.revision",
                  "options": [
                    "revision"
                  ],
                  "help": {
                    "short": "Specifies revision of container group profile."
                  }
                }
              ]
            },
            {
              "type": "array<object>",
              "var": "$resource.properties.containerGroupProperties.subnetIds",
              "options": [
                "subnet-ids"
              ],
              "help": {
                "short": "Specifies subnet Ids for container group."
              },
              "item": {
                "type": "object",
                "args": [
                  {
                    "type": "ResourceId",
                    "var": "$resource.properties.containerGroupProperties.subnetIds[].id",
                    "options": [
                      "id"
                    ],
                    "required": true,
                    "help": {
                      "short": "Specifies ARM resource id of the subnet."
                    },
                    "format": {
                      "template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworks/subnets/{}"
                    }
                  }
                ]
              }
            }
          ]
        },
        {
          "type": "object",
          "var": "$resource.properties.elasticityProfile",
          "options": [
            "elasticity-profile"
          ],
          "group": "Properties",
          "help": {
            "short": "Specifies elasticity profile of standby container group pools."
          },
          "args": [
            {
              "type": "integer64",
              "var": "$resource.properties.elasticityProfile.maxReadyCapacity",
              "options": [
                "max-ready-capacity"
              ],
              "required": true,
              "help": {
                "short": "Specifies maximum number of standby container groups in the standby pool."
              },
              "format": {
                "maximum": 2000,
                "minimum": 0
              }
            },
            {
              "type": "string",
              "var": "$resource.properties.elasticityProfile.refillPolicy",
              "options": [
                "refill-policy"
              ],
              "help": {
                "short": "Specifies refill policy of the pool."
              },
              "enum": {
                "items": [
                  {
                    "name": "always",
                    "value": "always"
                  }
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Resource",
      "args": [
        {
          "type": "ResourceLocation",
          "var": "$resource.location",
          "options": [
            "l",
            "location"
          ],
          "required": true,
          "group": "Resource",
          "help": {
            "short": "The geo-location where the resource lives"
          }
        },
        {
          "type": "object",
          "var": "$resource.tags",
          "options": [
            "tags"
          ],
          "group": "Resource",
          "help": {
            "short": "Resource tags."
          },
          "additionalProps": {
            "item": {
              "type": "string"
            }
          }
        }
      ]
    }
  ],
  "operations": [
    {
      "longRunning": {
        "finalStateVia": "azure-async-operation"
      },
      "operationId": "StandbyContainerGroupPools_CreateOrUpdate",
      "http": {
        "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StandbyPool/standbyContainerGroupPools/{standbyContainerGroupPoolName}",
        "request": {
          "method": "put",
          "path": {
            "params": [
              {
                "type": "string",
                "name": "resourceGroupName",
                "arg": "$Path.resourceGroupName",
                "required": true,
                "format": {
                  "pattern": "^[-\\w\\._\\(\\)]+$",
                  "maxLength": 90,
                  "minLength": 1
                }
              },
              {
                "type": "string",
                "name": "standbyContainerGroupPoolName",
                "arg": "$Path.standbyContainerGroupPoolName",
                "required": true,
                "format": {
                  "pattern": "^[a-zA-Z0-9-]{3,24}$"
                }
              },
              {
                "type": "uuid",
                "name": "subscriptionId",
                "arg": "$Path.subscriptionId",
                "required": true
              }
            ]
          },
          "query": {
            "consts": [
              {
                "readOnly": true,
                "const": true,
                "default": {
                  "value": "2024-03-01-preview"
                },
                "type": "string",
                "name": "api-version",
                "required": true,
                "format": {
                  "minLength": 1
                }
              }
            ]
          },
          "body": {
            "json": {
              "schema": {
                "type": "object",
                "name": "resource",
                "required": true,
                "props": [
                  {
                    "type": "ResourceLocation",
                    "name": "location",
                    "arg": "$resource.location",
                    "required": true
                  },
                  {
                    "type": "object",
                    "name": "properties",
                    "props": [
                      {
                        "type": "object",
                        "name": "containerGroupProperties",
                        "arg": "$resource.properties.containerGroupProperties",
                        "required": true,
                        "props": [
                          {
                            "type": "object",
                            "name": "containerGroupProfile",
                            "arg": "$resource.properties.containerGroupProperties.containerGroupProfile",
                            "required": true,
                            "props": [
                              {
                                "type": "ResourceId",
                                "name": "id",
                                "arg": "$resource.properties.containerGroupProperties.containerGroupProfile.id",
                                "required": true,
                                "format": {
                                  "template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ContainerInstance/containerGroupProfiles/{}"
                                }
                              },
                              {
                                "type": "integer64",
                                "name": "revision",
                                "arg": "$resource.properties.containerGroupProperties.containerGroupProfile.revision"
                              }
                            ]
                          },
                          {
                            "type": "array<object>",
                            "name": "subnetIds",
                            "arg": "$resource.properties.containerGroupProperties.subnetIds",
                            "item": {
                              "type": "object",
                              "props": [
                                {
                                  "type": "ResourceId",
                                  "name": "id",
                                  "arg": "$resource.properties.containerGroupProperties.subnetIds[].id",
                                  "required": true,
                                  "format": {
                                    "template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworks/subnets/{}"
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      },
                      {
                        "type": "object",
                        "name": "elasticityProfile",
                        "arg": "$resource.properties.elasticityProfile",
                        "required": true,
                        "props": [
                          {
                            "type": "integer64",
                            "name": "maxReadyCapacity",
                            "arg": "$resource.properties.elasticityProfile.maxReadyCapacity",
                            "required": true,
                            "format": {
                              "maximum": 2000,
                              "minimum": 0
                            }
                          },
                          {
                            "type": "string",
                            "name": "refillPolicy",
                            "arg": "$resource.properties.elasticityProfile.refillPolicy",
                            "enum": {
                              "items": [
                                {
                                  "value": "always"
                                }
                              ]
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "type": "object",
                    "name": "tags",
                    "arg": "$resource.tags",
                    "additionalProps": {
                      "item": {
                        "type": "string"
                      }
                    }
                  }
                ],
                "clientFlatten": true
              }
            }
          }
        },
        "responses": [
          {
            "statusCode": [
              200,
              201
            ],
            "body": {
              "json": {
                "var": "$Instance",
                "schema": {
                  "type": "object",
                  "props": [
                    {
                      "readOnly": true,
                      "type": "ResourceId",
                      "name": "id"
                    },
                    {
                      "type": "ResourceLocation",
                      "name": "location",
                      "required": true
                    },
                    {
                      "readOnly": true,
                      "type": "string",
                      "name": "name"
                    },
                    {
                      "type": "object",
                      "name": "properties",
                      "props": [
                        {
                          "type": "object",
                          "name": "containerGroupProperties",
                          "required": true,
                          "props": [
                            {
                              "type": "object",
                              "name": "containerGroupProfile",
                              "required": true,
                              "props": [
                                {
                                  "type": "ResourceId",
                                  "name": "id",
                                  "required": true,
                                  "format": {
                                    "template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ContainerInstance/containerGroupProfiles/{}"
                                  }
                                },
                                {
                                  "type": "integer64",
                                  "name": "revision"
                                }
                              ]
                            },
                            {
                              "type": "array<object>",
                              "name": "subnetIds",
                              "item": {
                                "type": "object",
                                "props": [
                                  {
                                    "type": "ResourceId",
                                    "name": "id",
                                    "required": true,
                                    "format": {
                                      "template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworks/subnets/{}"
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        {
                          "type": "object",
                          "name": "elasticityProfile",
                          "required": true,
                          "props": [
                            {
                              "type": "integer64",
                              "name": "maxReadyCapacity",
                              "required": true,
                              "format": {
                                "maximum": 2000,
                                "minimum": 0
                              }
                            },
                            {
                              "type": "string",
                              "name": "refillPolicy",
                              "enum": {
                                "items": [
                                  {
                                    "value": "always"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        {
                          "readOnly": true,
                          "type": "string",
                          "name": "provisioningState",
                          "enum": {
                            "items": [
                              {
                                "value": "Canceled"
                              },
                              {
                                "value": "Deleting"
                              },
                              {
                                "value": "Failed"
                              },
                              {
                                "value": "Succeeded"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "readOnly": true,
                      "type": "object",
                      "name": "systemData",
                      "props": [
                        {
                          "type": "dateTime",
                          "name": "createdAt"
                        },
                        {
                          "type": "string",
                          "name": "createdBy"
                        },
                        {
                          "type": "string",
                          "name": "createdByType",
                          "enum": {
                            "items": [
                              {
                                "value": "Application"
                              },
                              {
                                "value": "Key"
                              },
                              {
                                "value": "ManagedIdentity"
                              },
                              {
                                "value": "User"
                              }
                            ]
                          }
                        },
                        {
                          "type": "dateTime",
                          "name": "lastModifiedAt"
                        },
                        {
                          "type": "string",
                          "name": "lastModifiedBy"
                        },
                        {
                          "type": "string",
                          "name": "lastModifiedByType",
                          "enum": {
                            "items": [
                              {
                                "value": "Application"
                              },
                              {
                                "value": "Key"
                              },
                              {
                                "value": "ManagedIdentity"
                              },
                              {
                                "value": "User"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "type": "object",
                      "name": "tags",
                      "additionalProps": {
                        "item": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "readOnly": true,
                      "type": "string",
                      "name": "type"
                    }
                  ]
                }
              }
            }
          },
          {
            "isError": true,
            "body": {
              "json": {
                "schema": {
                  "readOnly": true,
                  "type": "@MgmtErrorFormat"
                }
              }
            }
          }
        ]
      }
    }
  ],
  "outputs": [
    {
      "type": "object",
      "ref": "$Instance",
      "clientFlatten": true
    }
  ]
}