{
  "name": "update",
  "version": "2025-03-01-preview",
  "resources": [
    {
      "id": "/projects/{}/users/{}/devboxes/{}/customizationgroups/{}",
      "version": "2025-03-01-preview",
      "swagger": "data-plane:microsoft.devcenter/devcenter/ResourceProviders/Microsoft.DevCenter/Paths/L3Byb2plY3RzL3twcm9qZWN0TmFtZX0vdXNlcnMve3VzZXJJZH0vZGV2Ym94ZXMve2RldkJveE5hbWV9L2N1c3RvbWl6YXRpb25Hcm91cHMve2N1c3RvbWl6YXRpb25Hcm91cE5hbWV9/V/MjAyNS0wMy0wMS1wcmV2aWV3"
    }
  ],
  "argGroups": [
    {
      "name": "",
      "args": [
        {
          "type": "string",
          "var": "$Path.customizationGroupName",
          "options": [
            "customization-group-name"
          ],
          "required": true,
          "help": {
            "short": "Name of the customization group."
          },
          "format": {
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$",
            "maxLength": 63,
            "minLength": 3
          }
        },
        {
          "type": "string",
          "var": "$Path.devBoxName",
          "options": [
            "dev-box-name"
          ],
          "required": true,
          "help": {
            "short": "Display name for the Dev Box."
          },
          "format": {
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$",
            "maxLength": 63,
            "minLength": 3
          }
        },
        {
          "type": "string",
          "var": "$Path.projectName",
          "options": [
            "project-name"
          ],
          "required": true,
          "help": {
            "short": "Name of the project."
          },
          "format": {
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$",
            "maxLength": 63,
            "minLength": 3
          }
        },
        {
          "type": "string",
          "var": "$Path.userId",
          "options": [
            "user-id"
          ],
          "required": true,
          "help": {
            "short": "The AAD object id of the user. If value is 'me', the identity is taken from the authentication context."
          },
          "format": {
            "pattern": "^[a-zA-Z0-9]{8}-([a-zA-Z0-9]{4}-){3}[a-zA-Z0-9]{12}$|^me$",
            "maxLength": 36,
            "minLength": 2
          }
        }
      ]
    },
    {
      "name": "Body",
      "args": [
        {
          "nullable": true,
          "type": "array<object>",
          "var": "$body.tasks",
          "options": [
            "tasks"
          ],
          "group": "Body",
          "help": {
            "short": "Tasks to apply. Note by default tasks are excluded from the response when listing customization groups. To include them, use the `include=tasks` query parameter."
          },
          "item": {
            "nullable": true,
            "type": "object",
            "args": [
              {
                "nullable": true,
                "type": "string",
                "var": "$body.tasks[].displayName",
                "options": [
                  "display-name"
                ],
                "help": {
                  "short": "Display name to help differentiate multiple instances of the same task."
                }
              },
              {
                "nullable": true,
                "type": "object",
                "var": "$body.tasks[].parameters",
                "options": [
                  "parameters"
                ],
                "help": {
                  "short": "Parameters for the task."
                },
                "additionalProps": {
                  "item": {
                    "nullable": true,
                    "type": "string"
                  }
                }
              },
              {
                "nullable": true,
                "type": "string",
                "var": "$body.tasks[].runAs",
                "options": [
                  "run-as"
                ],
                "help": {
                  "short": "What account to run the task as."
                },
                "enum": {
                  "items": [
                    {
                      "name": "System",
                      "value": "System"
                    },
                    {
                      "name": "User",
                      "value": "User"
                    }
                  ]
                }
              },
              {
                "nullable": true,
                "type": "integer32",
                "var": "$body.tasks[].timeoutInSeconds",
                "options": [
                  "timeout-in-seconds"
                ],
                "help": {
                  "short": "Timeout, in seconds. Overrides any timeout provided on the task definition."
                }
              }
            ]
          }
        }
      ]
    }
  ],
  "operations": [
    {
      "operationId": "DevBoxes_GetCustomizationGroup",
      "http": {
        "path": "/projects/{projectName}/users/{userId}/devboxes/{devBoxName}/customizationGroups/{customizationGroupName}",
        "request": {
          "method": "get",
          "path": {
            "params": [
              {
                "type": "string",
                "name": "customizationGroupName",
                "arg": "$Path.customizationGroupName",
                "required": true,
                "format": {
                  "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$",
                  "maxLength": 63,
                  "minLength": 3
                }
              },
              {
                "type": "string",
                "name": "devBoxName",
                "arg": "$Path.devBoxName",
                "required": true,
                "format": {
                  "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$",
                  "maxLength": 63,
                  "minLength": 3
                }
              },
              {
                "type": "string",
                "name": "projectName",
                "arg": "$Path.projectName",
                "required": true,
                "format": {
                  "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$",
                  "maxLength": 63,
                  "minLength": 3
                }
              },
              {
                "type": "string",
                "name": "userId",
                "arg": "$Path.userId",
                "required": true,
                "format": {
                  "pattern": "^[a-zA-Z0-9]{8}-([a-zA-Z0-9]{4}-){3}[a-zA-Z0-9]{12}$|^me$",
                  "maxLength": 36,
                  "minLength": 2
                }
              }
            ]
          },
          "query": {
            "consts": [
              {
                "readOnly": true,
                "const": true,
                "default": {
                  "value": "2025-03-01-preview"
                },
                "type": "string",
                "name": "api-version",
                "required": true,
                "format": {
                  "minLength": 1
                }
              }
            ]
          }
        },
        "responses": [
          {
            "statusCode": [
              200
            ],
            "body": {
              "json": {
                "var": "$Instance",
                "schema": {
                  "type": "object",
                  "props": [
                    {
                      "readOnly": true,
                      "type": "dateTime",
                      "name": "endTime"
                    },
                    {
                      "readOnly": true,
                      "type": "string",
                      "name": "name",
                      "format": {
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$",
                        "maxLength": 63,
                        "minLength": 3
                      }
                    },
                    {
                      "readOnly": true,
                      "type": "dateTime",
                      "name": "startTime"
                    },
                    {
                      "readOnly": true,
                      "type": "string",
                      "name": "status",
                      "enum": {
                        "items": [
                          {
                            "value": "Failed"
                          },
                          {
                            "value": "NotStarted"
                          },
                          {
                            "value": "Running"
                          },
                          {
                            "value": "Succeeded"
                          },
                          {
                            "value": "ValidationFailed"
                          }
                        ]
                      }
                    },
                    {
                      "type": "array<object>",
                      "name": "tasks",
                      "item": {
                        "type": "object",
                        "props": [
                          {
                            "type": "string",
                            "name": "displayName"
                          },
                          {
                            "readOnly": true,
                            "type": "dateTime",
                            "name": "endTime"
                          },
                          {
                            "readOnly": true,
                            "type": "string",
                            "name": "id"
                          },
                          {
                            "readOnly": true,
                            "type": "string",
                            "name": "logUri"
                          },
                          {
                            "type": "string",
                            "name": "name",
                            "required": true
                          },
                          {
                            "type": "object",
                            "name": "parameters",
                            "additionalProps": {
                              "item": {
                                "type": "string"
                              }
                            }
                          },
                          {
                            "type": "string",
                            "name": "runAs",
                            "enum": {
                              "items": [
                                {
                                  "value": "System"
                                },
                                {
                                  "value": "User"
                                }
                              ]
                            }
                          },
                          {
                            "readOnly": true,
                            "type": "dateTime",
                            "name": "startTime"
                          },
                          {
                            "readOnly": true,
                            "type": "string",
                            "name": "status",
                            "enum": {
                              "items": [
                                {
                                  "value": "Failed"
                                },
                                {
                                  "value": "FailedValidation"
                                },
                                {
                                  "value": "NotStarted"
                                },
                                {
                                  "value": "Running"
                                },
                                {
                                  "value": "Skipped"
                                },
                                {
                                  "value": "Succeeded"
                                },
                                {
                                  "value": "TimedOut"
                                },
                                {
                                  "value": "WaitingForUserInputUac"
                                },
                                {
                                  "value": "WaitingForUserSession"
                                }
                              ]
                            }
                          },
                          {
                            "type": "integer32",
                            "name": "timeoutInSeconds"
                          }
                        ]
                      }
                    },
                    {
                      "readOnly": true,
                      "type": "string",
                      "name": "uri"
                    }
                  ]
                }
              }
            }
          },
          {
            "isError": true,
            "header": {
              "items": [
                {
                  "name": "x-ms-error-code"
                }
              ]
            },
            "body": {
              "json": {
                "schema": {
                  "readOnly": true,
                  "type": "@ODataV4Format"
                }
              }
            }
          }
        ]
      }
    },
    {
      "instanceUpdate": {
        "ref": "$Instance",
        "json": {
          "schema": {
            "type": "object",
            "name": "body",
            "required": true,
            "props": [
              {
                "type": "array<object>",
                "name": "tasks",
                "arg": "$body.tasks",
                "item": {
                  "type": "object",
                  "props": [
                    {
                      "type": "string",
                      "name": "displayName",
                      "arg": "$body.tasks[].displayName"
                    },
                    {
                      "type": "object",
                      "name": "parameters",
                      "arg": "$body.tasks[].parameters",
                      "additionalProps": {
                        "item": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "string",
                      "name": "runAs",
                      "arg": "$body.tasks[].runAs",
                      "enum": {
                        "items": [
                          {
                            "value": "System"
                          },
                          {
                            "value": "User"
                          }
                        ]
                      }
                    },
                    {
                      "type": "integer32",
                      "name": "timeoutInSeconds",
                      "arg": "$body.tasks[].timeoutInSeconds"
                    }
                  ]
                }
              }
            ],
            "clientFlatten": true
          }
        }
      }
    },
    {
      "operationId": "DevBoxes_CreateCustomizationGroup",
      "http": {
        "path": "/projects/{projectName}/users/{userId}/devboxes/{devBoxName}/customizationGroups/{customizationGroupName}",
        "request": {
          "method": "put",
          "path": {
            "params": [
              {
                "type": "string",
                "name": "customizationGroupName",
                "arg": "$Path.customizationGroupName",
                "required": true,
                "format": {
                  "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$",
                  "maxLength": 63,
                  "minLength": 3
                }
              },
              {
                "type": "string",
                "name": "devBoxName",
                "arg": "$Path.devBoxName",
                "required": true,
                "format": {
                  "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$",
                  "maxLength": 63,
                  "minLength": 3
                }
              },
              {
                "type": "string",
                "name": "projectName",
                "arg": "$Path.projectName",
                "required": true,
                "format": {
                  "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$",
                  "maxLength": 63,
                  "minLength": 3
                }
              },
              {
                "type": "string",
                "name": "userId",
                "arg": "$Path.userId",
                "required": true,
                "format": {
                  "pattern": "^[a-zA-Z0-9]{8}-([a-zA-Z0-9]{4}-){3}[a-zA-Z0-9]{12}$|^me$",
                  "maxLength": 36,
                  "minLength": 2
                }
              }
            ]
          },
          "query": {
            "consts": [
              {
                "readOnly": true,
                "const": true,
                "default": {
                  "value": "2025-03-01-preview"
                },
                "type": "string",
                "name": "api-version",
                "required": true,
                "format": {
                  "minLength": 1
                }
              }
            ]
          },
          "body": {
            "json": {
              "ref": "$Instance"
            }
          }
        },
        "responses": [
          {
            "statusCode": [
              200
            ],
            "body": {
              "json": {
                "var": "$Instance",
                "schema": {
                  "type": "object",
                  "props": [
                    {
                      "readOnly": true,
                      "type": "dateTime",
                      "name": "endTime"
                    },
                    {
                      "readOnly": true,
                      "type": "string",
                      "name": "name",
                      "format": {
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$",
                        "maxLength": 63,
                        "minLength": 3
                      }
                    },
                    {
                      "readOnly": true,
                      "type": "dateTime",
                      "name": "startTime"
                    },
                    {
                      "readOnly": true,
                      "type": "string",
                      "name": "status",
                      "enum": {
                        "items": [
                          {
                            "value": "Failed"
                          },
                          {
                            "value": "NotStarted"
                          },
                          {
                            "value": "Running"
                          },
                          {
                            "value": "Succeeded"
                          },
                          {
                            "value": "ValidationFailed"
                          }
                        ]
                      }
                    },
                    {
                      "type": "array<object>",
                      "name": "tasks",
                      "item": {
                        "type": "object",
                        "props": [
                          {
                            "type": "string",
                            "name": "displayName"
                          },
                          {
                            "readOnly": true,
                            "type": "dateTime",
                            "name": "endTime"
                          },
                          {
                            "readOnly": true,
                            "type": "string",
                            "name": "id"
                          },
                          {
                            "readOnly": true,
                            "type": "string",
                            "name": "logUri"
                          },
                          {
                            "type": "string",
                            "name": "name",
                            "required": true
                          },
                          {
                            "type": "object",
                            "name": "parameters",
                            "additionalProps": {
                              "item": {
                                "type": "string"
                              }
                            }
                          },
                          {
                            "type": "string",
                            "name": "runAs",
                            "enum": {
                              "items": [
                                {
                                  "value": "System"
                                },
                                {
                                  "value": "User"
                                }
                              ]
                            }
                          },
                          {
                            "readOnly": true,
                            "type": "dateTime",
                            "name": "startTime"
                          },
                          {
                            "readOnly": true,
                            "type": "string",
                            "name": "status",
                            "enum": {
                              "items": [
                                {
                                  "value": "Failed"
                                },
                                {
                                  "value": "FailedValidation"
                                },
                                {
                                  "value": "NotStarted"
                                },
                                {
                                  "value": "Running"
                                },
                                {
                                  "value": "Skipped"
                                },
                                {
                                  "value": "Succeeded"
                                },
                                {
                                  "value": "TimedOut"
                                },
                                {
                                  "value": "WaitingForUserInputUac"
                                },
                                {
                                  "value": "WaitingForUserSession"
                                }
                              ]
                            }
                          },
                          {
                            "type": "integer32",
                            "name": "timeoutInSeconds"
                          }
                        ]
                      }
                    },
                    {
                      "readOnly": true,
                      "type": "string",
                      "name": "uri"
                    }
                  ]
                }
              }
            }
          },
          {
            "isError": true,
            "header": {
              "items": [
                {
                  "name": "x-ms-error-code"
                }
              ]
            },
            "body": {
              "json": {
                "schema": {
                  "readOnly": true,
                  "type": "@ODataV4Format"
                }
              }
            }
          }
        ]
      }
    }
  ],
  "outputs": [
    {
      "type": "object",
      "ref": "$Instance",
      "clientFlatten": true
    }
  ]
}