{
  "name": "update",
  "version": "2024-10-01-preview",
  "resources": [
    {
      "id": "/subscriptions/{}/resourcegroups/{}/providers/commvault.contentstore/cloudaccounts/{}/storages/{}",
      "version": "2024-10-01-preview",
      "swagger": "mgmt-plane/liftrcommvault/ResourceProviders/Commvault.ContentStore/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9Db21tdmF1bHQuQ29udGVudFN0b3JlL2Nsb3VkQWNjb3VudHMve2Nsb3VkQWNjb3VudE5hbWV9L3N0b3JhZ2VzL3tzdG9yYWdlTmFtZX0=/V/MjAyNC0xMC0wMS1wcmV2aWV3"
    }
  ],
  "argGroups": [
    {
      "name": "",
      "args": [
        {
          "type": "string",
          "var": "$Path.cloudAccountName",
          "options": [
            "cloud-account-name"
          ],
          "required": true,
          "idPart": "name",
          "help": {
            "short": "Name of the Cloud Account resource"
          },
          "format": {
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_\\-.: ]*$",
            "maxLength": 50,
            "minLength": 1
          }
        },
        {
          "type": "ResourceGroupName",
          "var": "$Path.resourceGroupName",
          "options": [
            "g",
            "resource-group"
          ],
          "required": true,
          "idPart": "resource_group"
        },
        {
          "type": "string",
          "var": "$Path.storageName",
          "options": [
            "n",
            "name",
            "storage-name"
          ],
          "required": true,
          "idPart": "child_name_1",
          "help": {
            "short": "Name of the Storage resource"
          },
          "format": {
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_\\-.: ]*$",
            "maxLength": 50,
            "minLength": 1
          }
        },
        {
          "type": "SubscriptionId",
          "var": "$Path.subscriptionId",
          "options": [
            "subscription"
          ],
          "required": true,
          "idPart": "subscription"
        }
      ]
    },
    {
      "name": "Properties",
      "args": [
        {
          "type": "string",
          "var": "$resource.properties.class",
          "options": [
            "class"
          ],
          "group": "Properties",
          "help": {
            "short": "The class of Commvault Storage"
          },
          "enum": {
            "items": [
              {
                "name": "COLD",
                "value": "COLD"
              },
              {
                "name": "HOT",
                "value": "HOT"
              }
            ]
          }
        },
        {
          "type": "string",
          "var": "$resource.properties.storageType",
          "options": [
            "storage-type"
          ],
          "group": "Properties",
          "help": {
            "short": "The type of Commvault Storage"
          },
          "enum": {
            "items": [
              {
                "name": "Air_Gap_Protect",
                "value": "Air_Gap_Protect"
              }
            ]
          }
        },
        {
          "type": "string",
          "var": "$resource.properties.vendor",
          "options": [
            "vendor"
          ],
          "group": "Properties",
          "help": {
            "short": "The vendor of Commvault Storage"
          },
          "enum": {
            "items": [
              {
                "name": "Azure_Blob_Storage",
                "value": "Azure_Blob_Storage"
              }
            ]
          }
        }
      ]
    }
  ],
  "operations": [
    {
      "operationId": "Storages_Get",
      "http": {
        "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Commvault.ContentStore/cloudAccounts/{cloudAccountName}/storages/{storageName}",
        "request": {
          "method": "get",
          "path": {
            "params": [
              {
                "type": "string",
                "name": "cloudAccountName",
                "arg": "$Path.cloudAccountName",
                "required": true,
                "format": {
                  "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_\\-.: ]*$",
                  "maxLength": 50,
                  "minLength": 1
                }
              },
              {
                "type": "string",
                "name": "resourceGroupName",
                "arg": "$Path.resourceGroupName",
                "required": true,
                "format": {
                  "maxLength": 90,
                  "minLength": 1
                }
              },
              {
                "type": "string",
                "name": "storageName",
                "arg": "$Path.storageName",
                "required": true,
                "format": {
                  "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_\\-.: ]*$",
                  "maxLength": 50,
                  "minLength": 1
                }
              },
              {
                "type": "uuid",
                "name": "subscriptionId",
                "arg": "$Path.subscriptionId",
                "required": true
              }
            ]
          },
          "query": {
            "consts": [
              {
                "readOnly": true,
                "const": true,
                "default": {
                  "value": "2024-10-01-preview"
                },
                "type": "string",
                "name": "api-version",
                "required": true,
                "format": {
                  "minLength": 1
                }
              }
            ]
          }
        },
        "responses": [
          {
            "statusCode": [
              200
            ],
            "body": {
              "json": {
                "var": "$Instance",
                "schema": {
                  "type": "object",
                  "props": [
                    {
                      "readOnly": true,
                      "type": "ResourceId",
                      "name": "id",
                      "format": {
                        "template": "/subscriptions/{}/resourceGroups/{}/providers/Commvault.ContentStore/cloudAccounts/{}/storages/{}"
                      }
                    },
                    {
                      "readOnly": true,
                      "type": "string",
                      "name": "name"
                    },
                    {
                      "type": "object",
                      "name": "properties",
                      "props": [
                        {
                          "type": "string",
                          "name": "class",
                          "required": true,
                          "enum": {
                            "items": [
                              {
                                "value": "COLD"
                              },
                              {
                                "value": "HOT"
                              }
                            ]
                          }
                        },
                        {
                          "type": "string",
                          "name": "location",
                          "required": true,
                          "format": {
                            "maxLength": 50,
                            "minLength": 1
                          }
                        },
                        {
                          "readOnly": true,
                          "type": "string",
                          "name": "provisioningState",
                          "enum": {
                            "items": [
                              {
                                "value": "Canceled"
                              },
                              {
                                "value": "Failed"
                              },
                              {
                                "value": "Succeeded"
                              }
                            ]
                          }
                        },
                        {
                          "type": "string",
                          "name": "storageType",
                          "required": true,
                          "enum": {
                            "items": [
                              {
                                "value": "Air_Gap_Protect"
                              }
                            ]
                          }
                        },
                        {
                          "type": "string",
                          "name": "vendor",
                          "required": true,
                          "enum": {
                            "items": [
                              {
                                "value": "Azure_Blob_Storage"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "readOnly": true,
                      "type": "object",
                      "name": "systemData",
                      "props": [
                        {
                          "type": "dateTime",
                          "name": "createdAt"
                        },
                        {
                          "type": "string",
                          "name": "createdBy"
                        },
                        {
                          "type": "string",
                          "name": "createdByType",
                          "enum": {
                            "items": [
                              {
                                "value": "Application"
                              },
                              {
                                "value": "Key"
                              },
                              {
                                "value": "ManagedIdentity"
                              },
                              {
                                "value": "User"
                              }
                            ]
                          }
                        },
                        {
                          "type": "dateTime",
                          "name": "lastModifiedAt"
                        },
                        {
                          "type": "string",
                          "name": "lastModifiedBy"
                        },
                        {
                          "type": "string",
                          "name": "lastModifiedByType",
                          "enum": {
                            "items": [
                              {
                                "value": "Application"
                              },
                              {
                                "value": "Key"
                              },
                              {
                                "value": "ManagedIdentity"
                              },
                              {
                                "value": "User"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "readOnly": true,
                      "type": "string",
                      "name": "type"
                    }
                  ],
                  "cls": "Storage_read"
                }
              }
            }
          },
          {
            "isError": true,
            "body": {
              "json": {
                "schema": {
                  "type": "@MgmtErrorFormat"
                }
              }
            }
          }
        ]
      }
    },
    {
      "instanceUpdate": {
        "ref": "$Instance",
        "json": {
          "schema": {
            "type": "object",
            "name": "resource",
            "required": true,
            "props": [
              {
                "type": "object",
                "name": "properties",
                "props": [
                  {
                    "type": "string",
                    "name": "class",
                    "arg": "$resource.properties.class",
                    "required": true,
                    "enum": {
                      "items": [
                        {
                          "value": "COLD"
                        },
                        {
                          "value": "HOT"
                        }
                      ]
                    }
                  },
                  {
                    "type": "string",
                    "name": "storageType",
                    "arg": "$resource.properties.storageType",
                    "required": true,
                    "enum": {
                      "items": [
                        {
                          "value": "Air_Gap_Protect"
                        }
                      ]
                    }
                  },
                  {
                    "type": "string",
                    "name": "vendor",
                    "arg": "$resource.properties.vendor",
                    "required": true,
                    "enum": {
                      "items": [
                        {
                          "value": "Azure_Blob_Storage"
                        }
                      ]
                    }
                  }
                ]
              }
            ],
            "clientFlatten": true
          }
        }
      }
    },
    {
      "longRunning": {
        "finalStateVia": "azure-async-operation"
      },
      "operationId": "Storages_CreateOrUpdate",
      "http": {
        "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Commvault.ContentStore/cloudAccounts/{cloudAccountName}/storages/{storageName}",
        "request": {
          "method": "put",
          "path": {
            "params": [
              {
                "type": "string",
                "name": "cloudAccountName",
                "arg": "$Path.cloudAccountName",
                "required": true,
                "format": {
                  "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_\\-.: ]*$",
                  "maxLength": 50,
                  "minLength": 1
                }
              },
              {
                "type": "string",
                "name": "resourceGroupName",
                "arg": "$Path.resourceGroupName",
                "required": true,
                "format": {
                  "maxLength": 90,
                  "minLength": 1
                }
              },
              {
                "type": "string",
                "name": "storageName",
                "arg": "$Path.storageName",
                "required": true,
                "format": {
                  "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_\\-.: ]*$",
                  "maxLength": 50,
                  "minLength": 1
                }
              },
              {
                "type": "uuid",
                "name": "subscriptionId",
                "arg": "$Path.subscriptionId",
                "required": true
              }
            ]
          },
          "query": {
            "consts": [
              {
                "readOnly": true,
                "const": true,
                "default": {
                  "value": "2024-10-01-preview"
                },
                "type": "string",
                "name": "api-version",
                "required": true,
                "format": {
                  "minLength": 1
                }
              }
            ]
          },
          "body": {
            "json": {
              "ref": "$Instance"
            }
          }
        },
        "responses": [
          {
            "statusCode": [
              200,
              201
            ],
            "body": {
              "json": {
                "var": "$Instance",
                "schema": {
                  "type": "@Storage_read"
                }
              }
            }
          },
          {
            "isError": true,
            "body": {
              "json": {
                "schema": {
                  "type": "@MgmtErrorFormat"
                }
              }
            }
          }
        ]
      }
    }
  ],
  "outputs": [
    {
      "type": "object",
      "ref": "$Instance",
      "clientFlatten": true
    }
  ]
}