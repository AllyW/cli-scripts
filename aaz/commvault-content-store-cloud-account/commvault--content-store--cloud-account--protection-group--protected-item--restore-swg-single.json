{
  "name": "restore",
  "version": "2024-10-01-preview",
  "resources": [
    {
      "id": "/subscriptions/{}/resourcegroups/{}/providers/commvault.contentstore/cloudaccounts/{}/protectiongroups/{}/protecteditems/{}/restore",
      "version": "2024-10-01-preview",
      "swagger": "mgmt-plane/liftrcommvault/ResourceProviders/Commvault.ContentStore/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9Db21tdmF1bHQuQ29udGVudFN0b3JlL2Nsb3VkQWNjb3VudHMve2Nsb3VkQWNjb3VudE5hbWV9L3Byb3RlY3Rpb25Hcm91cHMve3Byb3RlY3Rpb25Hcm91cE5hbWV9L3Byb3RlY3RlZEl0ZW1zL3twcm90ZWN0ZWRJdGVtTmFtZX0vcmVzdG9yZQ==/V/MjAyNC0xMC0wMS1wcmV2aWV3"
    }
  ],
  "argGroups": [
    {
      "name": "",
      "args": [
        {
          "type": "string",
          "var": "$Path.cloudAccountName",
          "options": [
            "cloud-account-name"
          ],
          "required": true,
          "idPart": "name",
          "help": {
            "short": "Name of the Cloud Account resource"
          },
          "format": {
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_\\-.: ]*$",
            "maxLength": 50,
            "minLength": 1
          }
        },
        {
          "type": "string",
          "var": "$Path.protectedItemName",
          "options": [
            "protected-item-name"
          ],
          "required": true,
          "idPart": "child_name_2",
          "help": {
            "short": "The protectedItem Id, name of 2 protected items can be same under a PG if they belong to different resource group or even different data source types VM/DB/AKS, etc; and name is mandatory in Azure Typespec, hence using name parameter for id in Commvault In case of Vm it will be vmGuid"
          },
          "format": {
            "pattern": "^[a-zA-Z0-9\\-_]{1,127}$"
          }
        },
        {
          "type": "string",
          "var": "$Path.protectionGroupName",
          "options": [
            "protection-group-name"
          ],
          "required": true,
          "idPart": "child_name_1",
          "help": {
            "short": "Name of the ProtectionGroup resource"
          },
          "format": {
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_\\-.: ]*$",
            "maxLength": 50,
            "minLength": 1
          }
        },
        {
          "type": "ResourceGroupName",
          "var": "$Path.resourceGroupName",
          "options": [
            "g",
            "resource-group"
          ],
          "required": true,
          "idPart": "resource_group"
        },
        {
          "type": "SubscriptionId",
          "var": "$Path.subscriptionId",
          "options": [
            "subscription"
          ],
          "required": true,
          "idPart": "subscription"
        }
      ]
    },
    {
      "name": "Request",
      "args": [
        {
          "type": "boolean",
          "var": "$request.inPlaceRestore",
          "options": [
            "in-place-restore"
          ],
          "required": true,
          "group": "Request",
          "help": {
            "short": "Check whether inplace or out of place restore."
          }
        },
        {
          "type": "string",
          "var": "$request.restoreType",
          "options": [
            "restore-type"
          ],
          "group": "Request",
          "help": {
            "short": "Type of Restore"
          },
          "enum": {
            "items": [
              {
                "name": "DISK_ATTACH",
                "value": "DISK_ATTACH"
              },
              {
                "name": "NONE",
                "value": "NONE"
              },
              {
                "name": "VIRTUAL_MACHINE",
                "value": "VIRTUAL_MACHINE"
              }
            ]
          }
        },
        {
          "type": "string",
          "var": "$request.toTime",
          "options": [
            "to-time"
          ],
          "group": "Request",
          "help": {
            "short": "Time to restore"
          }
        },
        {
          "type": "object",
          "var": "$request.vmDestinationInfo",
          "options": [
            "vm-destination-info"
          ],
          "required": true,
          "group": "Request",
          "help": {
            "short": "The vm destination details of the VM."
          },
          "args": [
            {
              "type": "array<object>",
              "var": "$request.vmDestinationInfo.vmInfoList",
              "options": [
                "vm-info-list"
              ],
              "required": true,
              "help": {
                "short": "List of information on VMs"
              },
              "item": {
                "type": "object",
                "args": [
                  {
                    "type": "boolean",
                    "var": "$request.vmDestinationInfo.vmInfoList[].attachAndSwapOsDisk",
                    "options": [
                      "attach-and-swap-os-disk"
                    ],
                    "help": {
                      "short": "The identifier to check if to attach and swap disk of the VM."
                    }
                  },
                  {
                    "type": "string",
                    "var": "$request.vmDestinationInfo.vmInfoList[].name",
                    "options": [
                      "name"
                    ],
                    "help": {
                      "short": "The name of the VM."
                    }
                  },
                  {
                    "type": "string",
                    "var": "$request.vmDestinationInfo.vmInfoList[].networkId",
                    "options": [
                      "network-id"
                    ],
                    "help": {
                      "short": "The network Id of the VM."
                    }
                  },
                  {
                    "type": "boolean",
                    "var": "$request.vmDestinationInfo.vmInfoList[].powerOnVmAfterRestore",
                    "options": [
                      "power-on-vm-after-restore"
                    ],
                    "help": {
                      "short": "The identifier to check if VM needs to be powered on."
                    }
                  },
                  {
                    "type": "string",
                    "var": "$request.vmDestinationInfo.vmInfoList[].region",
                    "options": [
                      "region"
                    ],
                    "help": {
                      "short": "The region of the VM."
                    }
                  },
                  {
                    "type": "string",
                    "var": "$request.vmDestinationInfo.vmInfoList[].resourceGroup",
                    "options": [
                      "resource-group"
                    ],
                    "help": {
                      "short": "The resource group of the VM."
                    }
                  },
                  {
                    "type": "string",
                    "var": "$request.vmDestinationInfo.vmInfoList[].sourceVmGuid",
                    "options": [
                      "source-vm-guid"
                    ],
                    "required": true,
                    "help": {
                      "short": "The GUID of VM to be restored."
                    }
                  },
                  {
                    "type": "string",
                    "var": "$request.vmDestinationInfo.vmInfoList[].storageAccountId",
                    "options": [
                      "storage-account-id"
                    ],
                    "required": true,
                    "help": {
                      "short": "The storage account to be used for restore."
                    }
                  },
                  {
                    "type": "string",
                    "var": "$request.vmDestinationInfo.vmInfoList[].subnetId",
                    "options": [
                      "subnet-id"
                    ],
                    "help": {
                      "short": "The subnet Id of the VM."
                    }
                  },
                  {
                    "type": "string",
                    "var": "$request.vmDestinationInfo.vmInfoList[].targetVmGuid",
                    "options": [
                      "target-vm-guid"
                    ],
                    "help": {
                      "short": "The GUID of target VM used in DISK ATTACH."
                    }
                  },
                  {
                    "type": "array<object>",
                    "var": "$request.vmDestinationInfo.vmInfoList[].vmtag",
                    "options": [
                      "vmtag"
                    ],
                    "help": {
                      "short": "The vmTag of the VM."
                    },
                    "item": {
                      "type": "object",
                      "args": [
                        {
                          "type": "string",
                          "var": "$request.vmDestinationInfo.vmInfoList[].vmtag[].name",
                          "options": [
                            "name"
                          ],
                          "required": true,
                          "help": {
                            "short": "The name of VM tag."
                          }
                        },
                        {
                          "type": "string",
                          "var": "$request.vmDestinationInfo.vmInfoList[].vmtag[].value",
                          "options": [
                            "value"
                          ],
                          "required": true,
                          "help": {
                            "short": "The value of VM tag."
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          ]
        }
      ]
    }
  ],
  "operations": [
    {
      "operationId": "ProtectedItems_Restore",
      "http": {
        "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Commvault.ContentStore/cloudAccounts/{cloudAccountName}/protectionGroups/{protectionGroupName}/protectedItems/{protectedItemName}/restore",
        "request": {
          "method": "post",
          "path": {
            "params": [
              {
                "type": "string",
                "name": "cloudAccountName",
                "arg": "$Path.cloudAccountName",
                "required": true,
                "format": {
                  "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_\\-.: ]*$",
                  "maxLength": 50,
                  "minLength": 1
                }
              },
              {
                "type": "string",
                "name": "protectedItemName",
                "arg": "$Path.protectedItemName",
                "required": true,
                "format": {
                  "pattern": "^[a-zA-Z0-9\\-_]{1,127}$"
                }
              },
              {
                "type": "string",
                "name": "protectionGroupName",
                "arg": "$Path.protectionGroupName",
                "required": true,
                "format": {
                  "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_\\-.: ]*$",
                  "maxLength": 50,
                  "minLength": 1
                }
              },
              {
                "type": "string",
                "name": "resourceGroupName",
                "arg": "$Path.resourceGroupName",
                "required": true,
                "format": {
                  "maxLength": 90,
                  "minLength": 1
                }
              },
              {
                "type": "uuid",
                "name": "subscriptionId",
                "arg": "$Path.subscriptionId",
                "required": true
              }
            ]
          },
          "query": {
            "consts": [
              {
                "readOnly": true,
                "const": true,
                "default": {
                  "value": "2024-10-01-preview"
                },
                "type": "string",
                "name": "api-version",
                "required": true,
                "format": {
                  "minLength": 1
                }
              }
            ]
          },
          "body": {
            "json": {
              "schema": {
                "type": "object",
                "name": "request",
                "required": true,
                "props": [
                  {
                    "type": "boolean",
                    "name": "inPlaceRestore",
                    "arg": "$request.inPlaceRestore",
                    "required": true
                  },
                  {
                    "type": "string",
                    "name": "restoreType",
                    "arg": "$request.restoreType",
                    "enum": {
                      "items": [
                        {
                          "value": "DISK_ATTACH"
                        },
                        {
                          "value": "NONE"
                        },
                        {
                          "value": "VIRTUAL_MACHINE"
                        }
                      ]
                    }
                  },
                  {
                    "type": "string",
                    "name": "toTime",
                    "arg": "$request.toTime"
                  },
                  {
                    "type": "object",
                    "name": "vmDestinationInfo",
                    "arg": "$request.vmDestinationInfo",
                    "required": true,
                    "props": [
                      {
                        "type": "array<object>",
                        "name": "vmInfoList",
                        "arg": "$request.vmDestinationInfo.vmInfoList",
                        "required": true,
                        "item": {
                          "type": "object",
                          "props": [
                            {
                              "type": "boolean",
                              "name": "attachAndSwapOsDisk",
                              "arg": "$request.vmDestinationInfo.vmInfoList[].attachAndSwapOsDisk"
                            },
                            {
                              "type": "string",
                              "name": "name",
                              "arg": "$request.vmDestinationInfo.vmInfoList[].name"
                            },
                            {
                              "type": "string",
                              "name": "networkId",
                              "arg": "$request.vmDestinationInfo.vmInfoList[].networkId"
                            },
                            {
                              "type": "boolean",
                              "name": "powerOnVmAfterRestore",
                              "arg": "$request.vmDestinationInfo.vmInfoList[].powerOnVmAfterRestore"
                            },
                            {
                              "type": "string",
                              "name": "region",
                              "arg": "$request.vmDestinationInfo.vmInfoList[].region"
                            },
                            {
                              "type": "string",
                              "name": "resourceGroup",
                              "arg": "$request.vmDestinationInfo.vmInfoList[].resourceGroup"
                            },
                            {
                              "type": "string",
                              "name": "sourceVmGuid",
                              "arg": "$request.vmDestinationInfo.vmInfoList[].sourceVmGuid",
                              "required": true
                            },
                            {
                              "type": "string",
                              "name": "storageAccountId",
                              "arg": "$request.vmDestinationInfo.vmInfoList[].storageAccountId",
                              "required": true
                            },
                            {
                              "type": "string",
                              "name": "subnetId",
                              "arg": "$request.vmDestinationInfo.vmInfoList[].subnetId"
                            },
                            {
                              "type": "string",
                              "name": "targetVmGuid",
                              "arg": "$request.vmDestinationInfo.vmInfoList[].targetVmGuid"
                            },
                            {
                              "type": "array<object>",
                              "name": "vmtag",
                              "arg": "$request.vmDestinationInfo.vmInfoList[].vmtag",
                              "item": {
                                "type": "object",
                                "props": [
                                  {
                                    "type": "string",
                                    "name": "name",
                                    "arg": "$request.vmDestinationInfo.vmInfoList[].vmtag[].name",
                                    "required": true
                                  },
                                  {
                                    "type": "string",
                                    "name": "value",
                                    "arg": "$request.vmDestinationInfo.vmInfoList[].vmtag[].value",
                                    "required": true
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                ],
                "clientFlatten": true
              }
            }
          }
        },
        "responses": [
          {
            "statusCode": [
              200
            ],
            "body": {
              "json": {
                "var": "$Instance",
                "schema": {
                  "type": "object",
                  "props": [
                    {
                      "readOnly": true,
                      "type": "array<string>",
                      "name": "jobIds",
                      "item": {
                        "type": "string"
                      }
                    },
                    {
                      "readOnly": true,
                      "type": "integer32",
                      "name": "taskId"
                    }
                  ]
                }
              }
            }
          },
          {
            "isError": true,
            "body": {
              "json": {
                "schema": {
                  "type": "@MgmtErrorFormat"
                }
              }
            }
          }
        ]
      }
    }
  ],
  "outputs": [
    {
      "type": "object",
      "ref": "$Instance",
      "clientFlatten": true
    }
  ]
}