{
  "name": "update",
  "version": "2025-01-21",
  "resources": [
    {
      "id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.devopsinfrastructure/pools/{}",
      "version": "2025-01-21",
      "swagger": "mgmt-plane/devopsinfrastructure/ResourceProviders/Microsoft.DevOpsInfrastructure/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGV2T3BzSW5mcmFzdHJ1Y3R1cmUvcG9vbHMve3Bvb2xOYW1lfQ==/V/MjAyNS0wMS0yMQ=="
    }
  ],
  "argGroups": [
    {
      "name": "",
      "args": [
        {
          "type": "string",
          "var": "$Path.poolName",
          "options": [
            "n",
            "name",
            "pool-name"
          ],
          "required": true,
          "idPart": "name",
          "help": {
            "short": "Name of the pool. It needs to be globally unique."
          },
          "format": {
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-.]*$"
          }
        },
        {
          "type": "ResourceGroupName",
          "var": "$Path.resourceGroupName",
          "options": [
            "g",
            "resource-group"
          ],
          "required": true,
          "idPart": "resource_group"
        },
        {
          "type": "SubscriptionId",
          "var": "$Path.subscriptionId",
          "options": [
            "subscription"
          ],
          "required": true,
          "idPart": "subscription"
        }
      ]
    },
    {
      "name": "Properties",
      "args": [
        {
          "type": "object",
          "var": "$resource.properties.agentProfile",
          "options": [
            "agent-profile"
          ],
          "group": "Properties",
          "help": {
            "short": "Defines how the machine will be handled once it executed a job."
          },
          "args": [
            {
              "type": "object",
              "var": "$resource.properties.agentProfile.Stateful",
              "options": [
                "stateful"
              ],
              "args": [
                {
                  "nullable": true,
                  "type": "string",
                  "var": "$resource.properties.agentProfile.Stateful.gracePeriodTimeSpan",
                  "options": [
                    "grace-period-time-span"
                  ],
                  "help": {
                    "short": "How long should the machine be kept around after it ran a workload when there are no stand-by agents. The maximum is one week."
                  }
                },
                {
                  "type": "string",
                  "var": "$resource.properties.agentProfile.Stateful.kind",
                  "options": [
                    "kind"
                  ],
                  "help": {
                    "short": "Stateful profile meaning that the machines will be returned to the pool after running a job."
                  },
                  "enum": {
                    "items": [
                      {
                        "name": "Stateful",
                        "value": "Stateful"
                      }
                    ]
                  }
                },
                {
                  "nullable": true,
                  "type": "string",
                  "var": "$resource.properties.agentProfile.Stateful.maxAgentLifetime",
                  "options": [
                    "max-agent-lifetime"
                  ],
                  "help": {
                    "short": "How long should stateful machines be kept around. The maximum is one week."
                  }
                }
              ]
            },
            {
              "blank": {
                "value": {}
              },
              "type": "object",
              "var": "$resource.properties.agentProfile.Stateless",
              "options": [
                "stateless"
              ],
              "args": [
                {
                  "type": "string",
                  "var": "$resource.properties.agentProfile.Stateless.kind",
                  "options": [
                    "kind"
                  ],
                  "help": {
                    "short": "Stateless profile meaning that the machines will be cleaned up after running a job."
                  },
                  "enum": {
                    "items": [
                      {
                        "name": "Stateless",
                        "value": "Stateless"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "nullable": true,
              "type": "object",
              "var": "$resource.properties.agentProfile.resourcePredictionsProfile",
              "options": [
                "resource-predictions-profile"
              ],
              "help": {
                "short": "Defines how the pool buffer/stand-by agents is provided."
              },
              "args": [
                {
                  "type": "object",
                  "var": "$resource.properties.agentProfile.resourcePredictionsProfile.Automatic",
                  "options": [
                    "automatic"
                  ],
                  "args": [
                    {
                      "type": "string",
                      "var": "$resource.properties.agentProfile.resourcePredictionsProfile.Automatic.kind",
                      "options": [
                        "kind"
                      ],
                      "help": {
                        "short": "The stand-by agent scheme is determined based on historical demand."
                      },
                      "enum": {
                        "items": [
                          {
                            "name": "Automatic",
                            "value": "Automatic"
                          }
                        ]
                      }
                    },
                    {
                      "nullable": true,
                      "type": "string",
                      "var": "$resource.properties.agentProfile.resourcePredictionsProfile.Automatic.predictionPreference",
                      "options": [
                        "prediction-preference"
                      ],
                      "help": {
                        "short": "Determines the balance between cost and performance."
                      },
                      "enum": {
                        "items": [
                          {
                            "name": "Balanced",
                            "value": "Balanced"
                          },
                          {
                            "name": "BestPerformance",
                            "value": "BestPerformance"
                          },
                          {
                            "name": "MoreCostEffective",
                            "value": "MoreCostEffective"
                          },
                          {
                            "name": "MorePerformance",
                            "value": "MorePerformance"
                          },
                          {
                            "name": "MostCostEffective",
                            "value": "MostCostEffective"
                          }
                        ]
                      }
                    }
                  ]
                },
                {
                  "blank": {
                    "value": {}
                  },
                  "type": "object",
                  "var": "$resource.properties.agentProfile.resourcePredictionsProfile.Manual",
                  "options": [
                    "manual"
                  ],
                  "args": [
                    {
                      "type": "string",
                      "var": "$resource.properties.agentProfile.resourcePredictionsProfile.Manual.kind",
                      "options": [
                        "kind"
                      ],
                      "help": {
                        "short": "Customer provides the stand-by agent scheme."
                      },
                      "enum": {
                        "items": [
                          {
                            "name": "Manual",
                            "value": "Manual"
                          }
                        ]
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "string",
          "var": "$resource.properties.devCenterProjectResourceId",
          "options": [
            "devcenter-project-id",
            "devcenter-project-resource-id"
          ],
          "group": "Properties",
          "help": {
            "short": "The resource id of the DevCenter Project the pool belongs to."
          }
        },
        {
          "type": "object",
          "var": "$resource.properties.fabricProfile",
          "options": [
            "fabric-profile"
          ],
          "group": "Properties",
          "help": {
            "short": "Defines the type of fabric the agent will run on."
          },
          "args": [
            {
              "type": "object",
              "var": "$resource.properties.fabricProfile.Vmss",
              "options": [
                "vmss"
              ],
              "args": [
                {
                  "type": "array<object>",
                  "var": "$resource.properties.fabricProfile.Vmss.images",
                  "options": [
                    "images"
                  ],
                  "help": {
                    "short": "The VM images of the machines in the pool."
                  },
                  "item": {
                    "nullable": true,
                    "type": "object",
                    "args": [
                      {
                        "nullable": true,
                        "type": "array<string>",
                        "var": "$resource.properties.fabricProfile.Vmss.images[].aliases",
                        "options": [
                          "aliases"
                        ],
                        "help": {
                          "short": "List of aliases to reference the image by."
                        },
                        "item": {
                          "nullable": true,
                          "type": "string"
                        }
                      },
                      {
                        "nullable": true,
                        "type": "string",
                        "var": "$resource.properties.fabricProfile.Vmss.images[].buffer",
                        "options": [
                          "buffer"
                        ],
                        "help": {
                          "short": "The percentage of the buffer to be allocated to this image."
                        }
                      },
                      {
                        "nullable": true,
                        "type": "string",
                        "var": "$resource.properties.fabricProfile.Vmss.images[].ephemeralType",
                        "options": [
                          "ephemeral-type"
                        ],
                        "help": {
                          "short": "The ephemeral type of the image."
                        },
                        "enum": {
                          "items": [
                            {
                              "name": "Automatic",
                              "value": "Automatic"
                            },
                            {
                              "name": "CacheDisk",
                              "value": "CacheDisk"
                            },
                            {
                              "name": "ResourceDisk",
                              "value": "ResourceDisk"
                            }
                          ]
                        }
                      },
                      {
                        "nullable": true,
                        "type": "string",
                        "var": "$resource.properties.fabricProfile.Vmss.images[].resourceId",
                        "options": [
                          "resource-id"
                        ],
                        "help": {
                          "short": "The resource id of the image."
                        }
                      },
                      {
                        "nullable": true,
                        "type": "string",
                        "var": "$resource.properties.fabricProfile.Vmss.images[].wellKnownImageName",
                        "options": [
                          "well-known-image-name"
                        ],
                        "help": {
                          "short": "The image to use from a well-known set of images made available to customers."
                        }
                      }
                    ]
                  }
                },
                {
                  "type": "string",
                  "var": "$resource.properties.fabricProfile.Vmss.kind",
                  "options": [
                    "kind"
                  ],
                  "help": {
                    "short": "Virtual Machine Scale Sets"
                  },
                  "enum": {
                    "items": [
                      {
                        "name": "Vmss",
                        "value": "Vmss"
                      }
                    ]
                  }
                },
                {
                  "nullable": true,
                  "type": "object",
                  "var": "$resource.properties.fabricProfile.Vmss.networkProfile",
                  "options": [
                    "network-profile"
                  ],
                  "help": {
                    "short": "The network profile of the machines in the pool."
                  },
                  "args": [
                    {
                      "type": "string",
                      "var": "$resource.properties.fabricProfile.Vmss.networkProfile.subnetId",
                      "options": [
                        "subnet-id"
                      ],
                      "help": {
                        "short": "The subnet id on which to put all machines created in the pool."
                      }
                    }
                  ]
                },
                {
                  "nullable": true,
                  "type": "object",
                  "var": "$resource.properties.fabricProfile.Vmss.osProfile",
                  "options": [
                    "os-profile"
                  ],
                  "help": {
                    "short": "The OS profile of the machines in the pool."
                  },
                  "args": [
                    {
                      "nullable": true,
                      "type": "string",
                      "var": "$resource.properties.fabricProfile.Vmss.osProfile.logonType",
                      "options": [
                        "logon-type"
                      ],
                      "help": {
                        "short": "Determines how the service should be run. By default, this will be set to Service."
                      },
                      "enum": {
                        "items": [
                          {
                            "name": "Interactive",
                            "value": "Interactive"
                          },
                          {
                            "name": "Service",
                            "value": "Service"
                          }
                        ]
                      }
                    },
                    {
                      "nullable": true,
                      "type": "object",
                      "var": "$resource.properties.fabricProfile.Vmss.osProfile.secretsManagementSettings",
                      "options": [
                        "secrets-management-settings"
                      ],
                      "help": {
                        "short": "The secret management settings of the machines in the pool."
                      },
                      "args": [
                        {
                          "nullable": true,
                          "type": "string",
                          "var": "$resource.properties.fabricProfile.Vmss.osProfile.secretsManagementSettings.certificateStoreLocation",
                          "options": [
                            "certificate-store-location"
                          ],
                          "help": {
                            "short": "Where to store certificates on the machine."
                          }
                        },
                        {
                          "nullable": true,
                          "type": "string",
                          "var": "$resource.properties.fabricProfile.Vmss.osProfile.secretsManagementSettings.certificateStoreName",
                          "options": [
                            "certificate-store-name"
                          ],
                          "help": {
                            "short": "Name of the certificate store to use on the machine, currently 'My' and 'Root' are supported."
                          },
                          "enum": {
                            "items": [
                              {
                                "name": "My",
                                "value": "My"
                              },
                              {
                                "name": "Root",
                                "value": "Root"
                              }
                            ]
                          }
                        },
                        {
                          "type": "boolean",
                          "var": "$resource.properties.fabricProfile.Vmss.osProfile.secretsManagementSettings.keyExportable",
                          "options": [
                            "key-exportable"
                          ],
                          "help": {
                            "short": "Defines if the key of the certificates should be exportable."
                          }
                        },
                        {
                          "type": "array<string>",
                          "var": "$resource.properties.fabricProfile.Vmss.osProfile.secretsManagementSettings.observedCertificates",
                          "options": [
                            "observed-certificates"
                          ],
                          "help": {
                            "short": "The list of certificates to install on all machines in the pool."
                          },
                          "item": {
                            "nullable": true,
                            "type": "string"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "object",
                  "var": "$resource.properties.fabricProfile.Vmss.sku",
                  "options": [
                    "sku"
                  ],
                  "help": {
                    "short": "The Azure SKU of the machines in the pool."
                  },
                  "args": [
                    {
                      "type": "string",
                      "var": "$resource.properties.fabricProfile.Vmss.sku.name",
                      "options": [
                        "name"
                      ],
                      "help": {
                        "short": "The Azure SKU name of the machines in the pool."
                      }
                    }
                  ]
                },
                {
                  "nullable": true,
                  "type": "object",
                  "var": "$resource.properties.fabricProfile.Vmss.storageProfile",
                  "options": [
                    "storage-profile"
                  ],
                  "help": {
                    "short": "The storage profile of the machines in the pool."
                  },
                  "args": [
                    {
                      "nullable": true,
                      "type": "array<object>",
                      "var": "$resource.properties.fabricProfile.Vmss.storageProfile.dataDisks",
                      "options": [
                        "data-disks"
                      ],
                      "help": {
                        "short": "A list of empty data disks to attach."
                      },
                      "item": {
                        "nullable": true,
                        "type": "object",
                        "args": [
                          {
                            "nullable": true,
                            "type": "string",
                            "var": "$resource.properties.fabricProfile.Vmss.storageProfile.dataDisks[].caching",
                            "options": [
                              "caching"
                            ],
                            "help": {
                              "short": "The type of caching to be enabled for the data disks. The default value for caching is readwrite. For information about the caching options see: https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/."
                            },
                            "enum": {
                              "items": [
                                {
                                  "name": "None",
                                  "value": "None"
                                },
                                {
                                  "name": "ReadOnly",
                                  "value": "ReadOnly"
                                },
                                {
                                  "name": "ReadWrite",
                                  "value": "ReadWrite"
                                }
                              ]
                            }
                          },
                          {
                            "nullable": true,
                            "type": "integer32",
                            "var": "$resource.properties.fabricProfile.Vmss.storageProfile.dataDisks[].diskSizeGiB",
                            "options": [
                              "disk-size-gi-b"
                            ],
                            "help": {
                              "short": "The initial disk size in gigabytes."
                            }
                          },
                          {
                            "nullable": true,
                            "type": "string",
                            "var": "$resource.properties.fabricProfile.Vmss.storageProfile.dataDisks[].driveLetter",
                            "options": [
                              "drive-letter"
                            ],
                            "help": {
                              "short": "The drive letter for the empty data disk. If not specified, it will be the first available letter."
                            }
                          },
                          {
                            "nullable": true,
                            "type": "string",
                            "var": "$resource.properties.fabricProfile.Vmss.storageProfile.dataDisks[].storageAccountType",
                            "options": [
                              "storage-account-type"
                            ],
                            "help": {
                              "short": "The storage Account type to be used for the data disk. If omitted, the default is \"standard_lrs\"."
                            },
                            "enum": {
                              "items": [
                                {
                                  "name": "Premium_LRS",
                                  "value": "Premium_LRS"
                                },
                                {
                                  "name": "Premium_ZRS",
                                  "value": "Premium_ZRS"
                                },
                                {
                                  "name": "StandardSSD_LRS",
                                  "value": "StandardSSD_LRS"
                                },
                                {
                                  "name": "StandardSSD_ZRS",
                                  "value": "StandardSSD_ZRS"
                                },
                                {
                                  "name": "Standard_LRS",
                                  "value": "Standard_LRS"
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "nullable": true,
                      "type": "string",
                      "var": "$resource.properties.fabricProfile.Vmss.storageProfile.osDiskStorageAccountType",
                      "options": [
                        "os-disk-storage-account-type"
                      ],
                      "help": {
                        "short": "The Azure SKU name of the machines in the pool."
                      },
                      "enum": {
                        "items": [
                          {
                            "name": "Premium",
                            "value": "Premium"
                          },
                          {
                            "name": "Standard",
                            "value": "Standard"
                          },
                          {
                            "name": "StandardSSD",
                            "value": "StandardSSD"
                          }
                        ]
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "integer32",
          "var": "$resource.properties.maximumConcurrency",
          "options": [
            "maximum-concurrency"
          ],
          "group": "Properties",
          "help": {
            "short": "Defines how many resources can there be created at any given time."
          },
          "format": {
            "maximum": 10000,
            "minimum": 1
          }
        },
        {
          "type": "object",
          "var": "$resource.properties.organizationProfile",
          "options": [
            "organization-profile"
          ],
          "group": "Properties",
          "help": {
            "short": "Defines the organization in which the pool will be used."
          },
          "args": [
            {
              "type": "object",
              "var": "$resource.properties.organizationProfile.AzureDevOps",
              "options": [
                "azure-dev-ops"
              ],
              "args": [
                {
                  "type": "string",
                  "var": "$resource.properties.organizationProfile.AzureDevOps.kind",
                  "options": [
                    "kind"
                  ],
                  "help": {
                    "short": "Azure DevOps organization profile"
                  },
                  "enum": {
                    "items": [
                      {
                        "name": "AzureDevOps",
                        "value": "AzureDevOps"
                      }
                    ]
                  }
                },
                {
                  "type": "array<object>",
                  "var": "$resource.properties.organizationProfile.AzureDevOps.organizations",
                  "options": [
                    "organizations"
                  ],
                  "help": {
                    "short": "The list of Azure DevOps organizations the pool should be present in."
                  },
                  "item": {
                    "nullable": true,
                    "type": "object",
                    "args": [
                      {
                        "nullable": true,
                        "type": "boolean",
                        "var": "$resource.properties.organizationProfile.AzureDevOps.organizations[].openAccess",
                        "options": [
                          "open-access"
                        ],
                        "help": {
                          "short": "Determines if the pool should have open access to all projects in this organization."
                        }
                      },
                      {
                        "nullable": true,
                        "type": "integer32",
                        "var": "$resource.properties.organizationProfile.AzureDevOps.organizations[].parallelism",
                        "options": [
                          "parallelism"
                        ],
                        "help": {
                          "short": "How many machines can be created at maximum in this organization out of the maximumConcurrency of the pool."
                        }
                      },
                      {
                        "nullable": true,
                        "type": "array<string>",
                        "var": "$resource.properties.organizationProfile.AzureDevOps.organizations[].projects",
                        "options": [
                          "projects"
                        ],
                        "help": {
                          "short": "Optional list of projects in which the pool should be created."
                        },
                        "item": {
                          "nullable": true,
                          "type": "string"
                        }
                      },
                      {
                        "type": "string",
                        "var": "$resource.properties.organizationProfile.AzureDevOps.organizations[].url",
                        "options": [
                          "url"
                        ],
                        "help": {
                          "short": "The Azure DevOps organization URL in which the pool should be created."
                        }
                      }
                    ]
                  }
                },
                {
                  "nullable": true,
                  "type": "object",
                  "var": "$resource.properties.organizationProfile.AzureDevOps.permissionProfile",
                  "options": [
                    "permission-profile"
                  ],
                  "help": {
                    "short": "The type of permission which determines which accounts are admins on the Azure DevOps pool."
                  },
                  "args": [
                    {
                      "nullable": true,
                      "type": "array<string>",
                      "var": "$resource.properties.organizationProfile.AzureDevOps.permissionProfile.groups",
                      "options": [
                        "groups"
                      ],
                      "help": {
                        "short": "Group email addresses"
                      },
                      "item": {
                        "nullable": true,
                        "type": "string"
                      }
                    },
                    {
                      "type": "string",
                      "var": "$resource.properties.organizationProfile.AzureDevOps.permissionProfile.kind",
                      "options": [
                        "kind"
                      ],
                      "help": {
                        "short": "Determines who has admin permissions to the Azure DevOps pool."
                      },
                      "enum": {
                        "items": [
                          {
                            "name": "CreatorOnly",
                            "value": "CreatorOnly"
                          },
                          {
                            "name": "Inherit",
                            "value": "Inherit"
                          },
                          {
                            "name": "SpecificAccounts",
                            "value": "SpecificAccounts"
                          }
                        ]
                      }
                    },
                    {
                      "nullable": true,
                      "type": "array<string>",
                      "var": "$resource.properties.organizationProfile.AzureDevOps.permissionProfile.users",
                      "options": [
                        "users"
                      ],
                      "help": {
                        "short": "User email addresses"
                      },
                      "item": {
                        "nullable": true,
                        "type": "string"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "type": "object",
              "var": "$resource.properties.organizationProfile.GitHub",
              "options": [
                "git-hub"
              ],
              "args": [
                {
                  "type": "string",
                  "var": "$resource.properties.organizationProfile.GitHub.kind",
                  "options": [
                    "kind"
                  ],
                  "help": {
                    "short": "GitHub organization profile"
                  },
                  "enum": {
                    "items": [
                      {
                        "name": "GitHub",
                        "value": "GitHub"
                      }
                    ]
                  }
                },
                {
                  "type": "array<object>",
                  "var": "$resource.properties.organizationProfile.GitHub.organizations",
                  "options": [
                    "organizations"
                  ],
                  "help": {
                    "short": "The list of GitHub organizations/repositories the pool should be present in."
                  },
                  "item": {
                    "nullable": true,
                    "type": "object",
                    "args": [
                      {
                        "nullable": true,
                        "type": "array<string>",
                        "var": "$resource.properties.organizationProfile.GitHub.organizations[].repositories",
                        "options": [
                          "repositories"
                        ],
                        "help": {
                          "short": "Optional list of repositories in which the pool should be created."
                        },
                        "item": {
                          "nullable": true,
                          "type": "string"
                        }
                      },
                      {
                        "type": "string",
                        "var": "$resource.properties.organizationProfile.GitHub.organizations[].url",
                        "options": [
                          "url"
                        ],
                        "help": {
                          "short": "The GitHub organization URL in which the pool should be created."
                        }
                      }
                    ]
                  }
                }
              ]
            }
          ]
        },
        {
          "nullable": true,
          "type": "string",
          "var": "$resource.properties.provisioningState",
          "options": [
            "provisioning-state"
          ],
          "hide": true,
          "group": "Properties",
          "help": {
            "short": "The status of the current operation."
          },
          "enum": {
            "items": [
              {
                "name": "Accepted",
                "value": "Accepted"
              },
              {
                "name": "Canceled",
                "value": "Canceled"
              },
              {
                "name": "Deleting",
                "value": "Deleting"
              },
              {
                "name": "Failed",
                "value": "Failed"
              },
              {
                "name": "Provisioning",
                "value": "Provisioning"
              },
              {
                "name": "Succeeded",
                "value": "Succeeded"
              },
              {
                "name": "Updating",
                "value": "Updating"
              }
            ]
          }
        }
      ]
    },
    {
      "name": "Resource",
      "args": [
        {
          "nullable": true,
          "type": "object",
          "var": "$resource.identity",
          "options": [
            "identity"
          ],
          "group": "Resource",
          "help": {
            "short": "The managed service identities assigned to this resource."
          },
          "args": [
            {
              "type": "string",
              "var": "$resource.identity.type",
              "options": [
                "type"
              ],
              "help": {
                "short": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed)."
              },
              "enum": {
                "items": [
                  {
                    "name": "None",
                    "value": "None"
                  },
                  {
                    "name": "SystemAssigned",
                    "value": "SystemAssigned"
                  },
                  {
                    "name": "UserAssigned",
                    "value": "UserAssigned"
                  }
                ]
              }
            },
            {
              "nullable": true,
              "type": "object",
              "var": "$resource.identity.userAssignedIdentities",
              "options": [
                "user-assigned-identities"
              ],
              "help": {
                "short": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests."
              },
              "additionalProps": {
                "item": {
                  "nullable": true,
                  "blank": {
                    "value": {}
                  },
                  "type": "object"
                }
              }
            }
          ]
        },
        {
          "nullable": true,
          "type": "object",
          "var": "$resource.tags",
          "options": [
            "tags"
          ],
          "group": "Resource",
          "help": {
            "short": "Resource tags."
          },
          "additionalProps": {
            "item": {
              "nullable": true,
              "type": "string"
            }
          }
        }
      ]
    }
  ],
  "operations": [
    {
      "operationId": "Pools_Get",
      "http": {
        "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevOpsInfrastructure/pools/{poolName}",
        "request": {
          "method": "get",
          "path": {
            "params": [
              {
                "type": "string",
                "name": "poolName",
                "arg": "$Path.poolName",
                "required": true,
                "format": {
                  "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-.]*$"
                }
              },
              {
                "type": "string",
                "name": "resourceGroupName",
                "arg": "$Path.resourceGroupName",
                "required": true,
                "format": {
                  "pattern": "^[-\\w\\._\\(\\)]+$",
                  "maxLength": 90,
                  "minLength": 1
                }
              },
              {
                "type": "uuid",
                "name": "subscriptionId",
                "arg": "$Path.subscriptionId",
                "required": true
              }
            ]
          },
          "query": {
            "consts": [
              {
                "readOnly": true,
                "const": true,
                "default": {
                  "value": "2025-01-21"
                },
                "type": "string",
                "name": "api-version",
                "required": true,
                "format": {
                  "minLength": 1
                }
              }
            ]
          }
        },
        "responses": [
          {
            "statusCode": [
              200
            ],
            "body": {
              "json": {
                "var": "$Instance",
                "schema": {
                  "type": "object",
                  "props": [
                    {
                      "readOnly": true,
                      "type": "ResourceId",
                      "name": "id"
                    },
                    {
                      "type": "IdentityObject",
                      "name": "identity",
                      "props": [
                        {
                          "readOnly": true,
                          "type": "uuid",
                          "name": "principalId"
                        },
                        {
                          "readOnly": true,
                          "type": "uuid",
                          "name": "tenantId"
                        },
                        {
                          "type": "string",
                          "name": "type",
                          "required": true,
                          "enum": {
                            "items": [
                              {
                                "value": "None"
                              },
                              {
                                "value": "SystemAssigned"
                              },
                              {
                                "value": "UserAssigned"
                              }
                            ]
                          }
                        },
                        {
                          "type": "object",
                          "name": "userAssignedIdentities",
                          "additionalProps": {
                            "item": {
                              "nullable": true,
                              "type": "object",
                              "props": [
                                {
                                  "readOnly": true,
                                  "type": "uuid",
                                  "name": "clientId"
                                },
                                {
                                  "readOnly": true,
                                  "type": "uuid",
                                  "name": "principalId"
                                }
                              ]
                            }
                          }
                        }
                      ]
                    },
                    {
                      "type": "ResourceLocation",
                      "name": "location",
                      "required": true
                    },
                    {
                      "readOnly": true,
                      "type": "string",
                      "name": "name"
                    },
                    {
                      "type": "object",
                      "name": "properties",
                      "props": [
                        {
                          "type": "object",
                          "name": "agentProfile",
                          "required": true,
                          "props": [
                            {
                              "type": "string",
                              "name": "kind",
                              "required": true,
                              "enum": {
                                "items": [
                                  {
                                    "value": "Stateful"
                                  },
                                  {
                                    "value": "Stateless"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "object",
                              "name": "resourcePredictionsProfile",
                              "props": [
                                {
                                  "type": "string",
                                  "name": "kind",
                                  "required": true,
                                  "enum": {
                                    "items": [
                                      {
                                        "value": "Automatic"
                                      },
                                      {
                                        "value": "Automatic"
                                      },
                                      {
                                        "value": "Manual"
                                      },
                                      {
                                        "value": "Manual"
                                      }
                                    ]
                                  }
                                }
                              ],
                              "discriminators": [
                                {
                                  "property": "kind",
                                  "value": "Automatic",
                                  "props": [
                                    {
                                      "type": "string",
                                      "name": "kind",
                                      "required": true,
                                      "enum": {
                                        "items": [
                                          {
                                            "value": "Automatic"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "string",
                                      "name": "predictionPreference",
                                      "enum": {
                                        "items": [
                                          {
                                            "value": "Balanced"
                                          },
                                          {
                                            "value": "BestPerformance"
                                          },
                                          {
                                            "value": "MoreCostEffective"
                                          },
                                          {
                                            "value": "MorePerformance"
                                          },
                                          {
                                            "value": "MostCostEffective"
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                },
                                {
                                  "property": "kind",
                                  "value": "Manual",
                                  "props": [
                                    {
                                      "type": "string",
                                      "name": "kind",
                                      "required": true,
                                      "enum": {
                                        "items": [
                                          {
                                            "value": "Manual"
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                }
                              ]
                            }
                          ],
                          "discriminators": [
                            {
                              "property": "kind",
                              "value": "Stateful",
                              "props": [
                                {
                                  "type": "string",
                                  "name": "gracePeriodTimeSpan"
                                },
                                {
                                  "type": "string",
                                  "name": "kind",
                                  "required": true,
                                  "enum": {
                                    "items": [
                                      {
                                        "value": "Stateful"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "string",
                                  "name": "maxAgentLifetime"
                                }
                              ]
                            },
                            {
                              "property": "kind",
                              "value": "Stateless",
                              "props": [
                                {
                                  "type": "string",
                                  "name": "kind",
                                  "required": true,
                                  "enum": {
                                    "items": [
                                      {
                                        "value": "Stateless"
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "string",
                          "name": "devCenterProjectResourceId",
                          "required": true
                        },
                        {
                          "type": "object",
                          "name": "fabricProfile",
                          "required": true,
                          "props": [
                            {
                              "type": "string",
                              "name": "kind",
                              "required": true,
                              "enum": {
                                "items": [
                                  {
                                    "value": "Vmss"
                                  }
                                ]
                              }
                            }
                          ],
                          "discriminators": [
                            {
                              "property": "kind",
                              "value": "Vmss",
                              "props": [
                                {
                                  "type": "array<object>",
                                  "name": "images",
                                  "required": true,
                                  "item": {
                                    "type": "object",
                                    "props": [
                                      {
                                        "type": "array<string>",
                                        "name": "aliases",
                                        "item": {
                                          "type": "string"
                                        }
                                      },
                                      {
                                        "default": {
                                          "value": "*"
                                        },
                                        "type": "string",
                                        "name": "buffer"
                                      },
                                      {
                                        "type": "string",
                                        "name": "ephemeralType",
                                        "enum": {
                                          "items": [
                                            {
                                              "value": "Automatic"
                                            },
                                            {
                                              "value": "CacheDisk"
                                            },
                                            {
                                              "value": "ResourceDisk"
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "string",
                                        "name": "resourceId"
                                      },
                                      {
                                        "type": "string",
                                        "name": "wellKnownImageName"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "string",
                                  "name": "kind",
                                  "required": true,
                                  "enum": {
                                    "items": [
                                      {
                                        "value": "Vmss"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "object",
                                  "name": "networkProfile",
                                  "props": [
                                    {
                                      "type": "string",
                                      "name": "subnetId",
                                      "required": true
                                    }
                                  ]
                                },
                                {
                                  "type": "object",
                                  "name": "osProfile",
                                  "props": [
                                    {
                                      "type": "string",
                                      "name": "logonType",
                                      "enum": {
                                        "items": [
                                          {
                                            "value": "Interactive"
                                          },
                                          {
                                            "value": "Service"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "name": "secretsManagementSettings",
                                      "props": [
                                        {
                                          "type": "string",
                                          "name": "certificateStoreLocation"
                                        },
                                        {
                                          "type": "string",
                                          "name": "certificateStoreName",
                                          "enum": {
                                            "items": [
                                              {
                                                "value": "My"
                                              },
                                              {
                                                "value": "Root"
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "boolean",
                                          "name": "keyExportable",
                                          "required": true
                                        },
                                        {
                                          "type": "array<string>",
                                          "name": "observedCertificates",
                                          "required": true,
                                          "item": {
                                            "type": "string"
                                          }
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "object",
                                  "name": "sku",
                                  "required": true,
                                  "props": [
                                    {
                                      "type": "string",
                                      "name": "name",
                                      "required": true
                                    }
                                  ]
                                },
                                {
                                  "type": "object",
                                  "name": "storageProfile",
                                  "props": [
                                    {
                                      "type": "array<object>",
                                      "name": "dataDisks",
                                      "item": {
                                        "type": "object",
                                        "props": [
                                          {
                                            "type": "string",
                                            "name": "caching",
                                            "enum": {
                                              "items": [
                                                {
                                                  "value": "None"
                                                },
                                                {
                                                  "value": "ReadOnly"
                                                },
                                                {
                                                  "value": "ReadWrite"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "integer32",
                                            "name": "diskSizeGiB"
                                          },
                                          {
                                            "type": "string",
                                            "name": "driveLetter"
                                          },
                                          {
                                            "type": "string",
                                            "name": "storageAccountType",
                                            "enum": {
                                              "items": [
                                                {
                                                  "value": "Premium_LRS"
                                                },
                                                {
                                                  "value": "Premium_ZRS"
                                                },
                                                {
                                                  "value": "StandardSSD_LRS"
                                                },
                                                {
                                                  "value": "StandardSSD_ZRS"
                                                },
                                                {
                                                  "value": "Standard_LRS"
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "string",
                                      "name": "osDiskStorageAccountType",
                                      "enum": {
                                        "items": [
                                          {
                                            "value": "Premium"
                                          },
                                          {
                                            "value": "Standard"
                                          },
                                          {
                                            "value": "StandardSSD"
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "integer32",
                          "name": "maximumConcurrency",
                          "required": true,
                          "format": {
                            "maximum": 10000,
                            "minimum": 1
                          }
                        },
                        {
                          "type": "object",
                          "name": "organizationProfile",
                          "required": true,
                          "props": [
                            {
                              "type": "string",
                              "name": "kind",
                              "required": true,
                              "enum": {
                                "items": [
                                  {
                                    "value": "AzureDevOps"
                                  },
                                  {
                                    "value": "GitHub"
                                  }
                                ]
                              }
                            }
                          ],
                          "discriminators": [
                            {
                              "property": "kind",
                              "value": "AzureDevOps",
                              "props": [
                                {
                                  "type": "string",
                                  "name": "kind",
                                  "required": true,
                                  "enum": {
                                    "items": [
                                      {
                                        "value": "AzureDevOps"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "array<object>",
                                  "name": "organizations",
                                  "required": true,
                                  "item": {
                                    "type": "object",
                                    "props": [
                                      {
                                        "type": "boolean",
                                        "name": "openAccess"
                                      },
                                      {
                                        "type": "integer32",
                                        "name": "parallelism"
                                      },
                                      {
                                        "type": "array<string>",
                                        "name": "projects",
                                        "item": {
                                          "type": "string"
                                        }
                                      },
                                      {
                                        "type": "string",
                                        "name": "url",
                                        "required": true
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "object",
                                  "name": "permissionProfile",
                                  "props": [
                                    {
                                      "type": "array<string>",
                                      "name": "groups",
                                      "item": {
                                        "type": "string"
                                      }
                                    },
                                    {
                                      "type": "string",
                                      "name": "kind",
                                      "required": true,
                                      "enum": {
                                        "items": [
                                          {
                                            "value": "CreatorOnly"
                                          },
                                          {
                                            "value": "Inherit"
                                          },
                                          {
                                            "value": "SpecificAccounts"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "array<string>",
                                      "name": "users",
                                      "item": {
                                        "type": "string"
                                      }
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "property": "kind",
                              "value": "GitHub",
                              "props": [
                                {
                                  "type": "string",
                                  "name": "kind",
                                  "required": true,
                                  "enum": {
                                    "items": [
                                      {
                                        "value": "GitHub"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "array<object>",
                                  "name": "organizations",
                                  "required": true,
                                  "item": {
                                    "type": "object",
                                    "props": [
                                      {
                                        "type": "array<string>",
                                        "name": "repositories",
                                        "item": {
                                          "type": "string"
                                        }
                                      },
                                      {
                                        "type": "string",
                                        "name": "url",
                                        "required": true
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "string",
                          "name": "provisioningState",
                          "enum": {
                            "items": [
                              {
                                "value": "Accepted"
                              },
                              {
                                "value": "Canceled"
                              },
                              {
                                "value": "Deleting"
                              },
                              {
                                "value": "Failed"
                              },
                              {
                                "value": "Provisioning"
                              },
                              {
                                "value": "Succeeded"
                              },
                              {
                                "value": "Updating"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "readOnly": true,
                      "type": "object",
                      "name": "systemData",
                      "props": [
                        {
                          "type": "dateTime",
                          "name": "createdAt"
                        },
                        {
                          "type": "string",
                          "name": "createdBy"
                        },
                        {
                          "type": "string",
                          "name": "createdByType",
                          "enum": {
                            "items": [
                              {
                                "value": "Application"
                              },
                              {
                                "value": "Key"
                              },
                              {
                                "value": "ManagedIdentity"
                              },
                              {
                                "value": "User"
                              }
                            ]
                          }
                        },
                        {
                          "type": "dateTime",
                          "name": "lastModifiedAt"
                        },
                        {
                          "type": "string",
                          "name": "lastModifiedBy"
                        },
                        {
                          "type": "string",
                          "name": "lastModifiedByType",
                          "enum": {
                            "items": [
                              {
                                "value": "Application"
                              },
                              {
                                "value": "Key"
                              },
                              {
                                "value": "ManagedIdentity"
                              },
                              {
                                "value": "User"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "type": "object",
                      "name": "tags",
                      "additionalProps": {
                        "item": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "readOnly": true,
                      "type": "string",
                      "name": "type"
                    }
                  ]
                }
              }
            }
          },
          {
            "isError": true,
            "body": {
              "json": {
                "schema": {
                  "readOnly": true,
                  "type": "@MgmtErrorFormat"
                }
              }
            }
          }
        ]
      }
    },
    {
      "instanceUpdate": {
        "ref": "$Instance",
        "json": {
          "schema": {
            "type": "object",
            "name": "resource",
            "required": true,
            "props": [
              {
                "type": "IdentityObject",
                "name": "identity",
                "arg": "$resource.identity",
                "props": [
                  {
                    "type": "string",
                    "name": "type",
                    "arg": "$resource.identity.type",
                    "required": true,
                    "enum": {
                      "items": [
                        {
                          "value": "None"
                        },
                        {
                          "value": "SystemAssigned"
                        },
                        {
                          "value": "UserAssigned"
                        }
                      ]
                    }
                  },
                  {
                    "type": "object",
                    "name": "userAssignedIdentities",
                    "arg": "$resource.identity.userAssignedIdentities",
                    "additionalProps": {
                      "item": {
                        "nullable": true,
                        "type": "object"
                      }
                    }
                  }
                ]
              },
              {
                "type": "object",
                "name": "properties",
                "props": [
                  {
                    "type": "object",
                    "name": "agentProfile",
                    "arg": "$resource.properties.agentProfile",
                    "required": true,
                    "props": [
                      {
                        "type": "string",
                        "name": "kind",
                        "required": true,
                        "enum": {
                          "items": [
                            {
                              "arg": "$resource.properties.agentProfile.Stateful",
                              "value": "Stateful"
                            },
                            {
                              "arg": "$resource.properties.agentProfile.Stateless",
                              "value": "Stateless"
                            }
                          ]
                        }
                      },
                      {
                        "type": "object",
                        "name": "resourcePredictionsProfile",
                        "arg": "$resource.properties.agentProfile.resourcePredictionsProfile",
                        "props": [
                          {
                            "type": "string",
                            "name": "kind",
                            "required": true,
                            "enum": {
                              "items": [
                                {
                                  "arg": "$resource.properties.agentProfile.resourcePredictionsProfile.Automatic",
                                  "value": "Automatic"
                                },
                                {
                                  "arg": "$resource.properties.agentProfile.resourcePredictionsProfile.Automatic",
                                  "value": "Automatic"
                                },
                                {
                                  "arg": "$resource.properties.agentProfile.resourcePredictionsProfile.Manual",
                                  "value": "Manual"
                                },
                                {
                                  "arg": "$resource.properties.agentProfile.resourcePredictionsProfile.Manual",
                                  "value": "Manual"
                                }
                              ]
                            }
                          }
                        ],
                        "discriminators": [
                          {
                            "property": "kind",
                            "value": "Automatic",
                            "props": [
                              {
                                "type": "string",
                                "name": "kind",
                                "arg": "$resource.properties.agentProfile.resourcePredictionsProfile.Automatic.kind",
                                "required": true,
                                "enum": {
                                  "items": [
                                    {
                                      "value": "Automatic"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "string",
                                "name": "predictionPreference",
                                "arg": "$resource.properties.agentProfile.resourcePredictionsProfile.Automatic.predictionPreference",
                                "enum": {
                                  "items": [
                                    {
                                      "value": "Balanced"
                                    },
                                    {
                                      "value": "BestPerformance"
                                    },
                                    {
                                      "value": "MoreCostEffective"
                                    },
                                    {
                                      "value": "MorePerformance"
                                    },
                                    {
                                      "value": "MostCostEffective"
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          {
                            "property": "kind",
                            "value": "Manual",
                            "props": [
                              {
                                "type": "string",
                                "name": "kind",
                                "arg": "$resource.properties.agentProfile.resourcePredictionsProfile.Manual.kind",
                                "required": true,
                                "enum": {
                                  "items": [
                                    {
                                      "value": "Manual"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    "discriminators": [
                      {
                        "property": "kind",
                        "value": "Stateful",
                        "props": [
                          {
                            "type": "string",
                            "name": "gracePeriodTimeSpan",
                            "arg": "$resource.properties.agentProfile.Stateful.gracePeriodTimeSpan"
                          },
                          {
                            "type": "string",
                            "name": "kind",
                            "arg": "$resource.properties.agentProfile.Stateful.kind",
                            "required": true,
                            "enum": {
                              "items": [
                                {
                                  "value": "Stateful"
                                }
                              ]
                            }
                          },
                          {
                            "type": "string",
                            "name": "maxAgentLifetime",
                            "arg": "$resource.properties.agentProfile.Stateful.maxAgentLifetime"
                          }
                        ]
                      },
                      {
                        "property": "kind",
                        "value": "Stateless",
                        "props": [
                          {
                            "type": "string",
                            "name": "kind",
                            "arg": "$resource.properties.agentProfile.Stateless.kind",
                            "required": true,
                            "enum": {
                              "items": [
                                {
                                  "value": "Stateless"
                                }
                              ]
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "type": "string",
                    "name": "devCenterProjectResourceId",
                    "arg": "$resource.properties.devCenterProjectResourceId",
                    "required": true
                  },
                  {
                    "type": "object",
                    "name": "fabricProfile",
                    "arg": "$resource.properties.fabricProfile",
                    "required": true,
                    "props": [
                      {
                        "type": "string",
                        "name": "kind",
                        "required": true,
                        "enum": {
                          "items": [
                            {
                              "arg": "$resource.properties.fabricProfile.Vmss",
                              "value": "Vmss"
                            }
                          ]
                        }
                      }
                    ],
                    "discriminators": [
                      {
                        "property": "kind",
                        "value": "Vmss",
                        "props": [
                          {
                            "type": "array<object>",
                            "name": "images",
                            "arg": "$resource.properties.fabricProfile.Vmss.images",
                            "required": true,
                            "item": {
                              "type": "object",
                              "props": [
                                {
                                  "type": "array<string>",
                                  "name": "aliases",
                                  "arg": "$resource.properties.fabricProfile.Vmss.images[].aliases",
                                  "item": {
                                    "type": "string"
                                  }
                                },
                                {
                                  "default": {
                                    "value": "*"
                                  },
                                  "type": "string",
                                  "name": "buffer",
                                  "arg": "$resource.properties.fabricProfile.Vmss.images[].buffer"
                                },
                                {
                                  "type": "string",
                                  "name": "ephemeralType",
                                  "arg": "$resource.properties.fabricProfile.Vmss.images[].ephemeralType",
                                  "enum": {
                                    "items": [
                                      {
                                        "value": "Automatic"
                                      },
                                      {
                                        "value": "CacheDisk"
                                      },
                                      {
                                        "value": "ResourceDisk"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "string",
                                  "name": "resourceId",
                                  "arg": "$resource.properties.fabricProfile.Vmss.images[].resourceId"
                                },
                                {
                                  "type": "string",
                                  "name": "wellKnownImageName",
                                  "arg": "$resource.properties.fabricProfile.Vmss.images[].wellKnownImageName"
                                }
                              ]
                            }
                          },
                          {
                            "type": "string",
                            "name": "kind",
                            "arg": "$resource.properties.fabricProfile.Vmss.kind",
                            "required": true,
                            "enum": {
                              "items": [
                                {
                                  "value": "Vmss"
                                }
                              ]
                            }
                          },
                          {
                            "type": "object",
                            "name": "networkProfile",
                            "arg": "$resource.properties.fabricProfile.Vmss.networkProfile",
                            "props": [
                              {
                                "type": "string",
                                "name": "subnetId",
                                "arg": "$resource.properties.fabricProfile.Vmss.networkProfile.subnetId",
                                "required": true
                              }
                            ]
                          },
                          {
                            "type": "object",
                            "name": "osProfile",
                            "arg": "$resource.properties.fabricProfile.Vmss.osProfile",
                            "props": [
                              {
                                "type": "string",
                                "name": "logonType",
                                "arg": "$resource.properties.fabricProfile.Vmss.osProfile.logonType",
                                "enum": {
                                  "items": [
                                    {
                                      "value": "Interactive"
                                    },
                                    {
                                      "value": "Service"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "object",
                                "name": "secretsManagementSettings",
                                "arg": "$resource.properties.fabricProfile.Vmss.osProfile.secretsManagementSettings",
                                "props": [
                                  {
                                    "type": "string",
                                    "name": "certificateStoreLocation",
                                    "arg": "$resource.properties.fabricProfile.Vmss.osProfile.secretsManagementSettings.certificateStoreLocation"
                                  },
                                  {
                                    "type": "string",
                                    "name": "certificateStoreName",
                                    "arg": "$resource.properties.fabricProfile.Vmss.osProfile.secretsManagementSettings.certificateStoreName",
                                    "enum": {
                                      "items": [
                                        {
                                          "value": "My"
                                        },
                                        {
                                          "value": "Root"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "boolean",
                                    "name": "keyExportable",
                                    "arg": "$resource.properties.fabricProfile.Vmss.osProfile.secretsManagementSettings.keyExportable",
                                    "required": true
                                  },
                                  {
                                    "type": "array<string>",
                                    "name": "observedCertificates",
                                    "arg": "$resource.properties.fabricProfile.Vmss.osProfile.secretsManagementSettings.observedCertificates",
                                    "required": true,
                                    "item": {
                                      "type": "string"
                                    }
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "type": "object",
                            "name": "sku",
                            "arg": "$resource.properties.fabricProfile.Vmss.sku",
                            "required": true,
                            "props": [
                              {
                                "type": "string",
                                "name": "name",
                                "arg": "$resource.properties.fabricProfile.Vmss.sku.name",
                                "required": true
                              }
                            ]
                          },
                          {
                            "type": "object",
                            "name": "storageProfile",
                            "arg": "$resource.properties.fabricProfile.Vmss.storageProfile",
                            "props": [
                              {
                                "type": "array<object>",
                                "name": "dataDisks",
                                "arg": "$resource.properties.fabricProfile.Vmss.storageProfile.dataDisks",
                                "item": {
                                  "type": "object",
                                  "props": [
                                    {
                                      "type": "string",
                                      "name": "caching",
                                      "arg": "$resource.properties.fabricProfile.Vmss.storageProfile.dataDisks[].caching",
                                      "enum": {
                                        "items": [
                                          {
                                            "value": "None"
                                          },
                                          {
                                            "value": "ReadOnly"
                                          },
                                          {
                                            "value": "ReadWrite"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "integer32",
                                      "name": "diskSizeGiB",
                                      "arg": "$resource.properties.fabricProfile.Vmss.storageProfile.dataDisks[].diskSizeGiB"
                                    },
                                    {
                                      "type": "string",
                                      "name": "driveLetter",
                                      "arg": "$resource.properties.fabricProfile.Vmss.storageProfile.dataDisks[].driveLetter"
                                    },
                                    {
                                      "type": "string",
                                      "name": "storageAccountType",
                                      "arg": "$resource.properties.fabricProfile.Vmss.storageProfile.dataDisks[].storageAccountType",
                                      "enum": {
                                        "items": [
                                          {
                                            "value": "Premium_LRS"
                                          },
                                          {
                                            "value": "Premium_ZRS"
                                          },
                                          {
                                            "value": "StandardSSD_LRS"
                                          },
                                          {
                                            "value": "StandardSSD_ZRS"
                                          },
                                          {
                                            "value": "Standard_LRS"
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "string",
                                "name": "osDiskStorageAccountType",
                                "arg": "$resource.properties.fabricProfile.Vmss.storageProfile.osDiskStorageAccountType",
                                "enum": {
                                  "items": [
                                    {
                                      "value": "Premium"
                                    },
                                    {
                                      "value": "Standard"
                                    },
                                    {
                                      "value": "StandardSSD"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "type": "integer32",
                    "name": "maximumConcurrency",
                    "arg": "$resource.properties.maximumConcurrency",
                    "required": true,
                    "format": {
                      "maximum": 10000,
                      "minimum": 1
                    }
                  },
                  {
                    "type": "object",
                    "name": "organizationProfile",
                    "arg": "$resource.properties.organizationProfile",
                    "required": true,
                    "props": [
                      {
                        "type": "string",
                        "name": "kind",
                        "required": true,
                        "enum": {
                          "items": [
                            {
                              "arg": "$resource.properties.organizationProfile.AzureDevOps",
                              "value": "AzureDevOps"
                            },
                            {
                              "arg": "$resource.properties.organizationProfile.GitHub",
                              "value": "GitHub"
                            }
                          ]
                        }
                      }
                    ],
                    "discriminators": [
                      {
                        "property": "kind",
                        "value": "AzureDevOps",
                        "props": [
                          {
                            "type": "string",
                            "name": "kind",
                            "arg": "$resource.properties.organizationProfile.AzureDevOps.kind",
                            "required": true,
                            "enum": {
                              "items": [
                                {
                                  "value": "AzureDevOps"
                                }
                              ]
                            }
                          },
                          {
                            "type": "array<object>",
                            "name": "organizations",
                            "arg": "$resource.properties.organizationProfile.AzureDevOps.organizations",
                            "required": true,
                            "item": {
                              "type": "object",
                              "props": [
                                {
                                  "type": "boolean",
                                  "name": "openAccess",
                                  "arg": "$resource.properties.organizationProfile.AzureDevOps.organizations[].openAccess"
                                },
                                {
                                  "type": "integer32",
                                  "name": "parallelism",
                                  "arg": "$resource.properties.organizationProfile.AzureDevOps.organizations[].parallelism"
                                },
                                {
                                  "type": "array<string>",
                                  "name": "projects",
                                  "arg": "$resource.properties.organizationProfile.AzureDevOps.organizations[].projects",
                                  "item": {
                                    "type": "string"
                                  }
                                },
                                {
                                  "type": "string",
                                  "name": "url",
                                  "arg": "$resource.properties.organizationProfile.AzureDevOps.organizations[].url",
                                  "required": true
                                }
                              ]
                            }
                          },
                          {
                            "type": "object",
                            "name": "permissionProfile",
                            "arg": "$resource.properties.organizationProfile.AzureDevOps.permissionProfile",
                            "props": [
                              {
                                "type": "array<string>",
                                "name": "groups",
                                "arg": "$resource.properties.organizationProfile.AzureDevOps.permissionProfile.groups",
                                "item": {
                                  "type": "string"
                                }
                              },
                              {
                                "type": "string",
                                "name": "kind",
                                "arg": "$resource.properties.organizationProfile.AzureDevOps.permissionProfile.kind",
                                "required": true,
                                "enum": {
                                  "items": [
                                    {
                                      "value": "CreatorOnly"
                                    },
                                    {
                                      "value": "Inherit"
                                    },
                                    {
                                      "value": "SpecificAccounts"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "array<string>",
                                "name": "users",
                                "arg": "$resource.properties.organizationProfile.AzureDevOps.permissionProfile.users",
                                "item": {
                                  "type": "string"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "property": "kind",
                        "value": "GitHub",
                        "props": [
                          {
                            "type": "string",
                            "name": "kind",
                            "arg": "$resource.properties.organizationProfile.GitHub.kind",
                            "required": true,
                            "enum": {
                              "items": [
                                {
                                  "value": "GitHub"
                                }
                              ]
                            }
                          },
                          {
                            "type": "array<object>",
                            "name": "organizations",
                            "arg": "$resource.properties.organizationProfile.GitHub.organizations",
                            "required": true,
                            "item": {
                              "type": "object",
                              "props": [
                                {
                                  "type": "array<string>",
                                  "name": "repositories",
                                  "arg": "$resource.properties.organizationProfile.GitHub.organizations[].repositories",
                                  "item": {
                                    "type": "string"
                                  }
                                },
                                {
                                  "type": "string",
                                  "name": "url",
                                  "arg": "$resource.properties.organizationProfile.GitHub.organizations[].url",
                                  "required": true
                                }
                              ]
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "type": "string",
                    "name": "provisioningState",
                    "arg": "$resource.properties.provisioningState",
                    "enum": {
                      "items": [
                        {
                          "value": "Accepted"
                        },
                        {
                          "value": "Canceled"
                        },
                        {
                          "value": "Deleting"
                        },
                        {
                          "value": "Failed"
                        },
                        {
                          "value": "Provisioning"
                        },
                        {
                          "value": "Succeeded"
                        },
                        {
                          "value": "Updating"
                        }
                      ]
                    }
                  }
                ]
              },
              {
                "type": "object",
                "name": "tags",
                "arg": "$resource.tags",
                "additionalProps": {
                  "item": {
                    "type": "string"
                  }
                }
              }
            ],
            "clientFlatten": true
          }
        }
      }
    },
    {
      "longRunning": {
        "finalStateVia": "azure-async-operation"
      },
      "operationId": "Pools_CreateOrUpdate",
      "http": {
        "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevOpsInfrastructure/pools/{poolName}",
        "request": {
          "method": "put",
          "path": {
            "params": [
              {
                "type": "string",
                "name": "poolName",
                "arg": "$Path.poolName",
                "required": true,
                "format": {
                  "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-.]*$"
                }
              },
              {
                "type": "string",
                "name": "resourceGroupName",
                "arg": "$Path.resourceGroupName",
                "required": true,
                "format": {
                  "pattern": "^[-\\w\\._\\(\\)]+$",
                  "maxLength": 90,
                  "minLength": 1
                }
              },
              {
                "type": "uuid",
                "name": "subscriptionId",
                "arg": "$Path.subscriptionId",
                "required": true
              }
            ]
          },
          "query": {
            "consts": [
              {
                "readOnly": true,
                "const": true,
                "default": {
                  "value": "2025-01-21"
                },
                "type": "string",
                "name": "api-version",
                "required": true,
                "format": {
                  "minLength": 1
                }
              }
            ]
          },
          "body": {
            "json": {
              "ref": "$Instance"
            }
          }
        },
        "responses": [
          {
            "statusCode": [
              200,
              201
            ],
            "body": {
              "json": {
                "var": "$Instance",
                "schema": {
                  "type": "object",
                  "props": [
                    {
                      "readOnly": true,
                      "type": "ResourceId",
                      "name": "id"
                    },
                    {
                      "type": "IdentityObject",
                      "name": "identity",
                      "props": [
                        {
                          "readOnly": true,
                          "type": "uuid",
                          "name": "principalId"
                        },
                        {
                          "readOnly": true,
                          "type": "uuid",
                          "name": "tenantId"
                        },
                        {
                          "type": "string",
                          "name": "type",
                          "required": true,
                          "enum": {
                            "items": [
                              {
                                "value": "None"
                              },
                              {
                                "value": "SystemAssigned"
                              },
                              {
                                "value": "UserAssigned"
                              }
                            ]
                          }
                        },
                        {
                          "type": "object",
                          "name": "userAssignedIdentities",
                          "additionalProps": {
                            "item": {
                              "nullable": true,
                              "type": "object",
                              "props": [
                                {
                                  "readOnly": true,
                                  "type": "uuid",
                                  "name": "clientId"
                                },
                                {
                                  "readOnly": true,
                                  "type": "uuid",
                                  "name": "principalId"
                                }
                              ]
                            }
                          }
                        }
                      ]
                    },
                    {
                      "type": "ResourceLocation",
                      "name": "location",
                      "required": true
                    },
                    {
                      "readOnly": true,
                      "type": "string",
                      "name": "name"
                    },
                    {
                      "type": "object",
                      "name": "properties",
                      "props": [
                        {
                          "type": "object",
                          "name": "agentProfile",
                          "required": true,
                          "props": [
                            {
                              "type": "string",
                              "name": "kind",
                              "required": true,
                              "enum": {
                                "items": [
                                  {
                                    "value": "Stateful"
                                  },
                                  {
                                    "value": "Stateless"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "object",
                              "name": "resourcePredictionsProfile",
                              "props": [
                                {
                                  "type": "string",
                                  "name": "kind",
                                  "required": true,
                                  "enum": {
                                    "items": [
                                      {
                                        "value": "Automatic"
                                      },
                                      {
                                        "value": "Automatic"
                                      },
                                      {
                                        "value": "Manual"
                                      },
                                      {
                                        "value": "Manual"
                                      }
                                    ]
                                  }
                                }
                              ],
                              "discriminators": [
                                {
                                  "property": "kind",
                                  "value": "Automatic",
                                  "props": [
                                    {
                                      "type": "string",
                                      "name": "kind",
                                      "required": true,
                                      "enum": {
                                        "items": [
                                          {
                                            "value": "Automatic"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "string",
                                      "name": "predictionPreference",
                                      "enum": {
                                        "items": [
                                          {
                                            "value": "Balanced"
                                          },
                                          {
                                            "value": "BestPerformance"
                                          },
                                          {
                                            "value": "MoreCostEffective"
                                          },
                                          {
                                            "value": "MorePerformance"
                                          },
                                          {
                                            "value": "MostCostEffective"
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                },
                                {
                                  "property": "kind",
                                  "value": "Manual",
                                  "props": [
                                    {
                                      "type": "string",
                                      "name": "kind",
                                      "required": true,
                                      "enum": {
                                        "items": [
                                          {
                                            "value": "Manual"
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                }
                              ]
                            }
                          ],
                          "discriminators": [
                            {
                              "property": "kind",
                              "value": "Stateful",
                              "props": [
                                {
                                  "type": "string",
                                  "name": "gracePeriodTimeSpan"
                                },
                                {
                                  "type": "string",
                                  "name": "kind",
                                  "required": true,
                                  "enum": {
                                    "items": [
                                      {
                                        "value": "Stateful"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "string",
                                  "name": "maxAgentLifetime"
                                }
                              ]
                            },
                            {
                              "property": "kind",
                              "value": "Stateless",
                              "props": [
                                {
                                  "type": "string",
                                  "name": "kind",
                                  "required": true,
                                  "enum": {
                                    "items": [
                                      {
                                        "value": "Stateless"
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "string",
                          "name": "devCenterProjectResourceId",
                          "required": true
                        },
                        {
                          "type": "object",
                          "name": "fabricProfile",
                          "required": true,
                          "props": [
                            {
                              "type": "string",
                              "name": "kind",
                              "required": true,
                              "enum": {
                                "items": [
                                  {
                                    "value": "Vmss"
                                  }
                                ]
                              }
                            }
                          ],
                          "discriminators": [
                            {
                              "property": "kind",
                              "value": "Vmss",
                              "props": [
                                {
                                  "type": "array<object>",
                                  "name": "images",
                                  "required": true,
                                  "item": {
                                    "type": "object",
                                    "props": [
                                      {
                                        "type": "array<string>",
                                        "name": "aliases",
                                        "item": {
                                          "type": "string"
                                        }
                                      },
                                      {
                                        "default": {
                                          "value": "*"
                                        },
                                        "type": "string",
                                        "name": "buffer"
                                      },
                                      {
                                        "type": "string",
                                        "name": "ephemeralType",
                                        "enum": {
                                          "items": [
                                            {
                                              "value": "Automatic"
                                            },
                                            {
                                              "value": "CacheDisk"
                                            },
                                            {
                                              "value": "ResourceDisk"
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "string",
                                        "name": "resourceId"
                                      },
                                      {
                                        "type": "string",
                                        "name": "wellKnownImageName"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "string",
                                  "name": "kind",
                                  "required": true,
                                  "enum": {
                                    "items": [
                                      {
                                        "value": "Vmss"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "object",
                                  "name": "networkProfile",
                                  "props": [
                                    {
                                      "type": "string",
                                      "name": "subnetId",
                                      "required": true
                                    }
                                  ]
                                },
                                {
                                  "type": "object",
                                  "name": "osProfile",
                                  "props": [
                                    {
                                      "type": "string",
                                      "name": "logonType",
                                      "enum": {
                                        "items": [
                                          {
                                            "value": "Interactive"
                                          },
                                          {
                                            "value": "Service"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "name": "secretsManagementSettings",
                                      "props": [
                                        {
                                          "type": "string",
                                          "name": "certificateStoreLocation"
                                        },
                                        {
                                          "type": "string",
                                          "name": "certificateStoreName",
                                          "enum": {
                                            "items": [
                                              {
                                                "value": "My"
                                              },
                                              {
                                                "value": "Root"
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "boolean",
                                          "name": "keyExportable",
                                          "required": true
                                        },
                                        {
                                          "type": "array<string>",
                                          "name": "observedCertificates",
                                          "required": true,
                                          "item": {
                                            "type": "string"
                                          }
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "object",
                                  "name": "sku",
                                  "required": true,
                                  "props": [
                                    {
                                      "type": "string",
                                      "name": "name",
                                      "required": true
                                    }
                                  ]
                                },
                                {
                                  "type": "object",
                                  "name": "storageProfile",
                                  "props": [
                                    {
                                      "type": "array<object>",
                                      "name": "dataDisks",
                                      "item": {
                                        "type": "object",
                                        "props": [
                                          {
                                            "type": "string",
                                            "name": "caching",
                                            "enum": {
                                              "items": [
                                                {
                                                  "value": "None"
                                                },
                                                {
                                                  "value": "ReadOnly"
                                                },
                                                {
                                                  "value": "ReadWrite"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "integer32",
                                            "name": "diskSizeGiB"
                                          },
                                          {
                                            "type": "string",
                                            "name": "driveLetter"
                                          },
                                          {
                                            "type": "string",
                                            "name": "storageAccountType",
                                            "enum": {
                                              "items": [
                                                {
                                                  "value": "Premium_LRS"
                                                },
                                                {
                                                  "value": "Premium_ZRS"
                                                },
                                                {
                                                  "value": "StandardSSD_LRS"
                                                },
                                                {
                                                  "value": "StandardSSD_ZRS"
                                                },
                                                {
                                                  "value": "Standard_LRS"
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "string",
                                      "name": "osDiskStorageAccountType",
                                      "enum": {
                                        "items": [
                                          {
                                            "value": "Premium"
                                          },
                                          {
                                            "value": "Standard"
                                          },
                                          {
                                            "value": "StandardSSD"
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "integer32",
                          "name": "maximumConcurrency",
                          "required": true,
                          "format": {
                            "maximum": 10000,
                            "minimum": 1
                          }
                        },
                        {
                          "type": "object",
                          "name": "organizationProfile",
                          "required": true,
                          "props": [
                            {
                              "type": "string",
                              "name": "kind",
                              "required": true,
                              "enum": {
                                "items": [
                                  {
                                    "value": "AzureDevOps"
                                  },
                                  {
                                    "value": "GitHub"
                                  }
                                ]
                              }
                            }
                          ],
                          "discriminators": [
                            {
                              "property": "kind",
                              "value": "AzureDevOps",
                              "props": [
                                {
                                  "type": "string",
                                  "name": "kind",
                                  "required": true,
                                  "enum": {
                                    "items": [
                                      {
                                        "value": "AzureDevOps"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "array<object>",
                                  "name": "organizations",
                                  "required": true,
                                  "item": {
                                    "type": "object",
                                    "props": [
                                      {
                                        "type": "boolean",
                                        "name": "openAccess"
                                      },
                                      {
                                        "type": "integer32",
                                        "name": "parallelism"
                                      },
                                      {
                                        "type": "array<string>",
                                        "name": "projects",
                                        "item": {
                                          "type": "string"
                                        }
                                      },
                                      {
                                        "type": "string",
                                        "name": "url",
                                        "required": true
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "object",
                                  "name": "permissionProfile",
                                  "props": [
                                    {
                                      "type": "array<string>",
                                      "name": "groups",
                                      "item": {
                                        "type": "string"
                                      }
                                    },
                                    {
                                      "type": "string",
                                      "name": "kind",
                                      "required": true,
                                      "enum": {
                                        "items": [
                                          {
                                            "value": "CreatorOnly"
                                          },
                                          {
                                            "value": "Inherit"
                                          },
                                          {
                                            "value": "SpecificAccounts"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "array<string>",
                                      "name": "users",
                                      "item": {
                                        "type": "string"
                                      }
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "property": "kind",
                              "value": "GitHub",
                              "props": [
                                {
                                  "type": "string",
                                  "name": "kind",
                                  "required": true,
                                  "enum": {
                                    "items": [
                                      {
                                        "value": "GitHub"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "array<object>",
                                  "name": "organizations",
                                  "required": true,
                                  "item": {
                                    "type": "object",
                                    "props": [
                                      {
                                        "type": "array<string>",
                                        "name": "repositories",
                                        "item": {
                                          "type": "string"
                                        }
                                      },
                                      {
                                        "type": "string",
                                        "name": "url",
                                        "required": true
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "string",
                          "name": "provisioningState",
                          "enum": {
                            "items": [
                              {
                                "value": "Accepted"
                              },
                              {
                                "value": "Canceled"
                              },
                              {
                                "value": "Deleting"
                              },
                              {
                                "value": "Failed"
                              },
                              {
                                "value": "Provisioning"
                              },
                              {
                                "value": "Succeeded"
                              },
                              {
                                "value": "Updating"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "readOnly": true,
                      "type": "object",
                      "name": "systemData",
                      "props": [
                        {
                          "type": "dateTime",
                          "name": "createdAt"
                        },
                        {
                          "type": "string",
                          "name": "createdBy"
                        },
                        {
                          "type": "string",
                          "name": "createdByType",
                          "enum": {
                            "items": [
                              {
                                "value": "Application"
                              },
                              {
                                "value": "Key"
                              },
                              {
                                "value": "ManagedIdentity"
                              },
                              {
                                "value": "User"
                              }
                            ]
                          }
                        },
                        {
                          "type": "dateTime",
                          "name": "lastModifiedAt"
                        },
                        {
                          "type": "string",
                          "name": "lastModifiedBy"
                        },
                        {
                          "type": "string",
                          "name": "lastModifiedByType",
                          "enum": {
                            "items": [
                              {
                                "value": "Application"
                              },
                              {
                                "value": "Key"
                              },
                              {
                                "value": "ManagedIdentity"
                              },
                              {
                                "value": "User"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "type": "object",
                      "name": "tags",
                      "additionalProps": {
                        "item": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "readOnly": true,
                      "type": "string",
                      "name": "type"
                    }
                  ]
                }
              }
            }
          },
          {
            "isError": true,
            "body": {
              "json": {
                "schema": {
                  "readOnly": true,
                  "type": "@MgmtErrorFormat"
                }
              }
            }
          }
        ]
      }
    }
  ],
  "outputs": [
    {
      "type": "object",
      "ref": "$Instance",
      "clientFlatten": true
    }
  ],
  "confirmation": ""
}